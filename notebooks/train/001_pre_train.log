2025-05-19 23:08:39,586 - INFO - 3685933559.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:08:39,587 - INFO - 3685933559.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:08:39,605 - INFO - 1853999821.py:13 - Configuración de logging completada.
2025-05-19 23:08:39,605 - INFO - 1853999821.py:20 - Opciones de visualización de Pandas configuradas.
2025-05-19 23:08:39,606 - INFO - 1853999821.py:26 - Estado aleatorio global (GLOBAL_RANDOM_STATE) definido como: 42
2025-05-19 23:08:39,616 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:08:39,621 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:08:39,621 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:08:39,651 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:08:39,653 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:08:39,656 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:08:39,674 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:08:39,678 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:08:39,678 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:08:39,679 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:08:39,679 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:08:39,680 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:08:39,697 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:08:39,698 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:08:39,699 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:08:39,699 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:08:39,716 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:08:39,729 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:08:39,740 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:08:39,751 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:08:39,763 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:08:39,771 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:09:46,051 - INFO - 1992013928.py:9 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:09:46,054 - INFO - 1992013928.py:16 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:09:46,055 - INFO - 1992013928.py:19 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:17:46,399 - INFO - 3685933559.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:17:46,402 - INFO - 3685933559.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:17:46,411 - INFO - 2883432253.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:17:46,414 - INFO - 2883432253.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:17:46,415 - INFO - 2883432253.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:17:46,429 - INFO - 1853999821.py:13 - Configuración de logging completada.
2025-05-19 23:17:46,429 - INFO - 1853999821.py:20 - Opciones de visualización de Pandas configuradas.
2025-05-19 23:17:46,430 - INFO - 1853999821.py:26 - Estado aleatorio global (GLOBAL_RANDOM_STATE) definido como: 42
2025-05-19 23:17:46,437 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:17:46,440 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:17:46,441 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:17:46,464 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:17:46,465 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:17:46,467 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:17:46,475 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:17:46,477 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:17:46,477 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:17:46,477 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:17:46,478 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:17:46,478 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:17:46,487 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:17:46,488 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:17:46,488 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:17:46,489 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:17:46,500 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:17:46,510 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:17:46,519 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:17:46,528 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:17:46,537 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:17:46,544 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:17:53,374 - INFO - 3685933559.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:17:53,376 - INFO - 3685933559.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:17:53,386 - INFO - 2883432253.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:17:53,390 - INFO - 2883432253.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:17:53,391 - INFO - 2883432253.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:17:53,402 - INFO - 1853999821.py:13 - Configuración de logging completada.
2025-05-19 23:17:53,403 - INFO - 1853999821.py:20 - Opciones de visualización de Pandas configuradas.
2025-05-19 23:17:53,403 - INFO - 1853999821.py:26 - Estado aleatorio global (GLOBAL_RANDOM_STATE) definido como: 42
2025-05-19 23:17:53,414 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:17:53,421 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:17:53,422 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:17:53,445 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:17:53,449 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:17:53,451 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:17:53,461 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:17:53,467 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:17:53,471 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:17:53,471 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:17:53,471 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:17:53,472 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:17:53,481 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:17:53,482 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:17:53,483 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:17:53,483 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:17:53,497 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:17:53,510 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:17:53,524 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:17:53,537 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:17:53,546 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:17:53,555 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:18:27,101 - INFO - 3685933559.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:18:27,103 - INFO - 3685933559.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:18:27,113 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:18:27,116 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:18:27,117 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:18:27,126 - INFO - 1853999821.py:13 - Configuración de logging completada.
2025-05-19 23:18:27,127 - INFO - 1853999821.py:20 - Opciones de visualización de Pandas configuradas.
2025-05-19 23:18:27,127 - INFO - 1853999821.py:26 - Estado aleatorio global (GLOBAL_RANDOM_STATE) definido como: 42
2025-05-19 23:18:27,135 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:18:27,138 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:18:27,139 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:18:27,151 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:18:27,152 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:18:27,153 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:18:27,164 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:18:27,168 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:18:27,168 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:18:27,169 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:18:27,169 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:18:27,170 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:18:27,181 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:18:27,187 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:18:27,188 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:18:27,192 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:18:27,221 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:18:27,238 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:18:27,250 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:18:27,261 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:18:27,271 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:18:27,279 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:19:25,402 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:19:25,403 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:19:25,419 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:19:25,422 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:19:25,423 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:19:25,434 - INFO - 1853999821.py:13 - Configuración de logging completada.
2025-05-19 23:19:25,435 - INFO - 1853999821.py:20 - Opciones de visualización de Pandas configuradas.
2025-05-19 23:19:25,435 - INFO - 1853999821.py:26 - Estado aleatorio global (GLOBAL_RANDOM_STATE) definido como: 42
2025-05-19 23:19:25,443 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:19:25,447 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:19:25,447 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:19:25,457 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:19:25,458 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:19:25,461 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:19:25,469 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:19:25,471 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:19:25,472 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:19:25,473 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:19:25,474 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:19:25,474 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:19:25,482 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:19:25,483 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:19:25,484 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:19:25,485 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:19:25,508 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:19:25,531 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:19:25,547 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:19:25,559 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:19:25,570 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:19:25,579 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:30:04,663 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:30:04,664 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:30:04,675 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:30:04,678 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:30:04,679 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:30:04,687 - INFO - 3751765458.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:30:04,688 - INFO - 3751765458.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:30:04,689 - INFO - 3751765458.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:30:04,689 - INFO - 3751765458.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:30:04,690 - INFO - 3751765458.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:30:04,691 - INFO - 3751765458.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:30:04,714 - INFO - 31172164.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:30:04,721 - INFO - 31172164.py:13 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:30:04,722 - INFO - 31172164.py:14 - Dimensiones del dataset unificado: 782 filas y 11 columnas.
2025-05-19 23:30:04,743 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:30:04,745 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:30:04,747 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:30:04,757 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:30:04,759 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:30:04,760 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:30:04,761 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:30:04,762 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:30:04,762 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:30:04,771 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:30:04,773 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:30:04,774 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:30:04,774 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:30:04,794 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:30:04,808 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:30:04,822 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:30:04,833 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:30:04,843 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:30:04,851 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:34:33,395 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:34:33,397 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:34:33,427 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:34:33,435 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:34:33,440 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:34:33,451 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:34:33,452 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:34:33,452 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:34:33,454 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:34:33,454 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:33,454 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:34:33,468 - INFO - 1550685253.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:33,471 - INFO - 1550685253.py:8 - Datos divididos exitosamente.
2025-05-19 23:34:33,472 - INFO - 1550685253.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-19 23:34:33,472 - INFO - 1550685253.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-19 23:34:33,480 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:34:33,481 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:34:33,483 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:33,499 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:33,501 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:34:33,502 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:34:33,502 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:34:33,503 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:34:33,504 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:34:33,511 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:34:33,513 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:33,514 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:34:33,515 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:34:33,531 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:34:33,548 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:34:33,561 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:34:33,573 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:34:33,585 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:34:33,592 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:34:49,716 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:34:49,717 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:34:49,727 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:34:49,731 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:34:49,731 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:34:49,741 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:34:49,742 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:34:49,742 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:34:49,744 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:34:49,744 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:49,745 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:34:49,754 - INFO - 925254344.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:49,757 - INFO - 925254344.py:8 - Datos divididos exitosamente.
2025-05-19 23:34:49,758 - INFO - 925254344.py:9 - Dimensiones de X_train: (586, 8), y_train: (586,)
2025-05-19 23:34:49,759 - INFO - 925254344.py:10 - Dimensiones de X_test: (196, 8), y_test: (196,)
2025-05-19 23:34:49,785 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:34:49,787 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:34:49,790 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:49,808 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:49,811 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:34:49,812 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:34:49,812 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:34:49,813 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:34:49,813 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:34:49,823 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:34:49,825 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:49,825 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:34:49,826 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:34:49,847 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:34:49,863 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:34:49,875 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:34:49,884 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:34:49,894 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:34:49,902 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:34:57,151 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:34:57,152 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:34:57,184 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:34:57,188 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:34:57,189 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:34:57,210 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:34:57,212 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:34:57,213 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:34:57,217 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:34:57,218 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:57,219 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:34:57,231 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:57,239 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-19 23:34:57,239 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-19 23:34:57,240 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-19 23:34:57,250 - INFO - 2047924253.py:5 - Iniciando la selección de Features (X) y Target (y).
2025-05-19 23:34:57,251 - INFO - 2047924253.py:11 - Variable Target (y) seleccionada: 'happiness_score'. Número de observaciones: 782
2025-05-19 23:34:57,254 - INFO - 2047924253.py:30 - Features (X) seleccionadas. Número de features: 8. Columnas: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:57,266 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:34:57,268 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:34:57,269 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:34:57,269 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:34:57,270 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:34:57,271 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:34:57,280 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:34:57,282 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:34:57,283 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:34:57,283 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:34:57,297 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:34:57,311 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:34:57,323 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:34:57,335 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:34:57,347 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:34:57,354 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:42:46,238 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:42:46,240 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:42:46,279 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:42:46,281 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:42:46,282 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:42:46,289 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:42:46,291 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:42:46,291 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:42:46,293 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:42:46,293 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:42:46,294 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:42:46,302 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:42:46,305 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-19 23:42:46,306 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-19 23:42:46,307 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-19 23:42:46,313 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-19 23:42:46,315 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:42:46,315 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-19 23:42:46,316 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-19 23:42:46,323 - INFO - 3836073113.py:5 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:42:46,326 - INFO - 3836073113.py:18 - División de datos completada.
2025-05-19 23:42:46,326 - INFO - 3836073113.py:19 - Dimensiones de X_train: (625, 8)
2025-05-19 23:42:46,327 - INFO - 3836073113.py:20 - Dimensiones de X_test: (157, 8)
2025-05-19 23:42:46,327 - INFO - 3836073113.py:21 - Dimensiones de y_train: (625,)
2025-05-19 23:42:46,327 - INFO - 3836073113.py:22 - Dimensiones de y_test: (157,)
2025-05-19 23:42:46,337 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:42:46,338 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:42:46,339 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:42:46,340 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:42:46,357 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:42:46,379 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:42:46,396 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:42:46,412 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:42:46,421 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:42:46,429 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-19 23:50:54,490 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-19 23:50:54,491 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-19 23:50:54,522 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-19 23:50:54,524 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-19 23:50:54,525 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-19 23:50:54,533 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-19 23:50:54,534 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-19 23:50:54,535 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-19 23:50:54,535 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-19 23:50:54,536 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:50:54,536 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-19 23:50:54,546 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-19 23:50:54,549 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-19 23:50:54,550 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-19 23:50:54,550 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-19 23:50:54,557 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-19 23:50:54,558 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:50:54,559 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-19 23:50:54,559 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-19 23:50:54,567 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-19 23:50:54,582 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-19 23:50:54,585 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-19 23:50:54,597 - INFO - 3089100299.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-19 23:50:54,620 - INFO - 3089100299.py:20 - Preprocesamiento del Escenario 1 completado.
2025-05-19 23:50:54,621 - INFO - 3089100299.py:21 - Forma de X_train_s1: (625, 16)
2025-05-19 23:50:54,621 - INFO - 3089100299.py:22 - Forma de X_test_s1: (157, 16)
2025-05-19 23:50:54,631 - INFO - 3173417078.py:4 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-19 23:50:54,648 - INFO - 3173417078.py:24 - Preprocesamiento del Escenario 1 completado.
2025-05-19 23:50:54,649 - INFO - 3173417078.py:25 - Forma de X_train_s1: (625, 16)
2025-05-19 23:50:54,649 - INFO - 3173417078.py:26 - Forma de X_test_s1: (157, 16)
2025-05-19 23:50:54,660 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-19 23:50:54,661 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-19 23:50:54,662 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-19 23:50:54,663 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-19 23:50:54,680 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-19 23:50:54,692 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-19 23:50:54,705 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-19 23:50:54,717 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-19 23:50:54,728 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-19 23:50:54,737 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-20 00:02:30,127 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:02:30,129 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:02:30,160 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:02:30,166 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:02:30,167 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:02:30,185 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:02:30,187 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:02:30,187 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:02:30,189 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:02:30,189 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:02:30,190 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:02:30,199 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:02:30,205 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:02:30,208 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:02:30,209 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:02:30,219 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:02:30,221 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:02:30,222 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:02:30,223 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:02:30,231 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:02:30,242 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:02:30,243 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:02:30,252 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:02:30,268 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:02:30,268 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:02:30,269 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:02:30,278 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:02:30,279 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:02:30,286 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:02:30,287 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:02:30,296 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-20 00:02:30,297 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:02:30,298 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-20 00:02:30,298 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-20 00:02:30,312 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-20 00:02:30,327 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-20 00:02:30,336 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-20 00:02:30,347 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-20 00:02:30,359 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-20 00:02:30,366 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-20 00:05:23,766 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:05:23,768 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:05:23,782 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:05:23,786 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:05:23,786 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:05:23,808 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:05:23,809 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:05:23,810 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:05:23,812 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:05:23,814 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:05:23,815 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:05:23,834 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:05:23,838 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:05:23,841 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:05:23,844 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:05:23,855 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:05:23,857 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:05:23,858 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:05:23,859 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:05:23,870 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:05:23,878 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:05:23,879 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:05:23,889 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:05:23,904 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:05:23,905 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:05:23,905 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:05:23,913 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:05:23,914 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:05:23,921 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:05:23,922 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:05:23,929 - INFO - 2754202269.py:8 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:05:23,930 - INFO - 2754202269.py:26 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:05:23,942 - INFO - 2165956576.py:4 - Identificando tipos de columnas base para el preprocesamiento.
2025-05-20 00:05:23,944 - INFO - 2165956576.py:10 - Columnas numéricas base: ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:05:23,944 - INFO - 2165956576.py:11 - Columna región: ['region']
2025-05-20 00:05:23,944 - INFO - 2165956576.py:12 - Columna año: ['year']
2025-05-20 00:05:23,958 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-20 00:05:23,974 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-20 00:05:23,986 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-20 00:05:23,998 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-20 00:05:24,011 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-20 00:05:24,018 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-20 00:08:17,931 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:08:17,934 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:08:17,947 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:08:17,952 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:08:17,952 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:08:17,962 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:08:17,964 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:08:17,964 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:08:17,966 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:08:17,967 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:08:17,968 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:08:17,977 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:08:17,979 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:08:17,979 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:08:17,980 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:08:17,990 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:08:17,993 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:08:17,994 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:08:17,995 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:08:18,017 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:08:18,032 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:08:18,040 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:08:18,064 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:08:18,087 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:08:18,088 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:08:18,088 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:08:18,098 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:08:18,099 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:08:18,108 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:08:18,110 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:08:18,119 - INFO - 2754202269.py:8 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:08:18,120 - INFO - 2754202269.py:26 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:08:18,133 - INFO - 1773944443.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:08:18,145 - INFO - 1773944443.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:08:18,145 - INFO - 1773944443.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:08:18,146 - INFO - 1773944443.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:08:18,165 - INFO - 2380421247.py:10 - Definiendo y aplicando los 4 pipelines de preprocesamiento.
2025-05-20 00:08:18,177 - INFO - 2380421247.py:26 - P1: X_train_processed1 (625, 17), X_test_processed1 (157, 17)
2025-05-20 00:08:18,189 - INFO - 2380421247.py:42 - P2: X_train_processed2 (625, 21), X_test_processed2 (157, 21)
2025-05-20 00:08:18,198 - INFO - 2380421247.py:60 - P3: PCA retuvo 6 comp. X_train_processed3 (625, 16)
2025-05-20 00:08:18,210 - INFO - 2380421247.py:82 - P4: PCA retuvo 5 comp. X_train_processed4 (625, 20)
2025-05-20 00:08:18,219 - INFO - 2826607240.py:4 - Definiendo los modelos a probar y la función de evaluación.
2025-05-20 00:28:58,614 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:28:58,616 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:28:58,638 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:28:58,640 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:28:58,641 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:28:58,648 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:28:58,649 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:28:58,650 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:28:58,651 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:28:58,652 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:28:58,652 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:28:58,660 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:28:58,662 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:28:58,662 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:28:58,663 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:28:58,672 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:28:58,673 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:28:58,674 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:28:58,675 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:28:58,682 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,689 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,690 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:28:58,712 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,745 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:28:58,745 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:28:58,745 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:28:58,755 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:28:58,756 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:28:58,770 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:28:58,771 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:28:58,779 - INFO - 2754202269.py:8 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:28:58,781 - INFO - 2754202269.py:26 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:28:58,794 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:28:58,805 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:28:58,805 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:28:58,806 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:28:58,830 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,831 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:28:58,839 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,839 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:28:58,846 - INFO - 960759820.py:8 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:28:58,847 - INFO - 960759820.py:17 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:28:58,856 - INFO - 2456942889.py:9 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:28:58,856 - INFO - 2456942889.py:30 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:29:08,506 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:29:08,508 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:29:08,518 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:29:08,521 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:29:08,521 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:29:08,530 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:29:08,532 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:29:08,533 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:29:08,534 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:29:08,535 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:29:08,535 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:29:08,543 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:29:08,546 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:29:08,546 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:29:08,547 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:29:08,555 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:29:08,556 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:29:08,557 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:29:08,557 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:29:08,563 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,573 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,574 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:29:08,583 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,604 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:29:08,605 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:29:08,606 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:29:08,626 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:29:08,631 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:29:08,640 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:29:08,641 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:29:08,656 - INFO - 2754202269.py:8 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:29:08,658 - INFO - 2754202269.py:26 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:29:08,671 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:29:08,679 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:29:08,680 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:29:08,680 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:29:08,689 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,690 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:29:08,697 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,698 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:29:08,705 - INFO - 960759820.py:8 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:29:08,706 - INFO - 960759820.py:17 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:29:08,713 - INFO - 3322138953.py:9 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:29:08,715 - INFO - 3322138953.py:30 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:31:16,622 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:31:16,623 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:31:16,634 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:31:16,637 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:31:16,638 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:31:16,648 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:31:16,650 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:31:16,651 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:31:16,652 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:31:16,653 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:31:16,653 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:31:16,660 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:31:16,663 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:31:16,664 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:31:16,665 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:31:16,672 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:31:16,673 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:31:16,674 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:31:16,674 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:31:16,693 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,718 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,720 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:31:16,727 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,742 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:31:16,742 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:31:16,743 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:31:16,756 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:31:16,760 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:31:16,769 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:31:16,770 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:31:16,777 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:31:16,778 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:31:16,791 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:31:16,800 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:31:16,801 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:31:16,801 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:31:16,808 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,808 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:31:16,816 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,816 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:31:16,824 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:31:16,825 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:31:16,849 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:31:16,851 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:31:16,859 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 00:31:16,875 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 00:31:16,875 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 00:31:16,876 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 00:31:16,876 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 00:46:16,171 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:46:16,173 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:46:16,183 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:46:16,186 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:46:16,187 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:46:16,207 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:46:16,211 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:46:16,212 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:46:16,213 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:46:16,214 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:46:16,215 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:46:16,231 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:46:16,238 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:46:16,239 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:46:16,240 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:46:16,248 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:46:16,250 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:46:16,250 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:46:16,251 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:46:16,262 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,271 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,273 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:46:16,280 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,296 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:46:16,296 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:46:16,297 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:46:16,306 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:46:16,307 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:46:16,315 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:46:16,316 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:46:16,324 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:46:16,325 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:46:16,339 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:46:16,350 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:46:16,350 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:46:16,351 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:46:16,359 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,360 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:46:16,368 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,369 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:46:16,377 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:46:16,378 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:46:16,385 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:46:16,386 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:46:16,395 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 00:46:16,408 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 00:46:16,409 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 00:46:16,410 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 00:46:16,411 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 00:46:16,419 - INFO - 3868736925.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:46:16,420 - INFO - 3868736925.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 00:46:16,428 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:46:16,429 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:47:57,122 - INFO - 1100067994.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 00:47:57,123 - INFO - 1100067994.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 00:48:02,816 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:48:02,818 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:48:02,829 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:48:02,832 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:48:02,833 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:48:02,844 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:48:02,845 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:48:02,846 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:48:02,846 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:48:02,847 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:48:02,848 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:48:02,855 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:48:02,858 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:48:02,858 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:48:02,859 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:48:02,867 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:48:02,872 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:48:02,877 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:48:02,877 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:48:02,896 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:02,910 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:02,911 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:48:02,919 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:02,933 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:48:02,939 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:48:02,940 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:48:02,948 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:48:02,949 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:48:02,957 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:48:02,959 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:48:02,965 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:48:02,966 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:48:02,977 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:48:02,987 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:48:02,988 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:48:02,988 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:48:02,996 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:02,997 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:48:03,003 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:03,004 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:48:03,011 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:48:03,012 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:48:03,019 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:48:03,020 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:48:03,031 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 00:48:03,043 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 00:48:03,044 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 00:48:03,044 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 00:48:03,045 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 00:48:03,052 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:48:03,053 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 00:48:03,061 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:48:03,061 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:48:03,068 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 00:48:03,069 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 00:49:14,015 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:49:14,016 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:49:14,025 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:49:14,028 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:49:14,028 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:49:14,037 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:49:14,039 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:49:14,040 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:49:14,042 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:49:14,043 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:49:14,044 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:49:14,053 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:49:14,056 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:49:14,057 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:49:14,058 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:49:14,065 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:49:14,067 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:49:14,067 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:49:14,068 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:49:14,075 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,084 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,085 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:49:14,094 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,116 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:49:14,117 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:49:14,118 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:49:14,136 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:14,143 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:49:14,151 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:14,152 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:49:14,164 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:49:14,165 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:49:14,178 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:49:14,189 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:49:14,190 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:49:14,190 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:49:14,199 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,200 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:49:14,207 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,208 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:49:14,216 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:14,217 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:49:14,227 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:49:14,227 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:49:14,236 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 00:49:14,249 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 00:49:14,250 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 00:49:14,250 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 00:49:14,250 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 00:49:14,260 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:14,261 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 00:49:14,268 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:14,269 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:49:14,277 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 00:49:14,278 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 00:49:14,285 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 00:49:14,296 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 00:49:14,296 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 00:49:14,297 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 00:49:14,297 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 00:49:56,372 - INFO - 2856582237.py:35 - Librerías importadas y logging configurado.
2025-05-20 00:49:56,373 - INFO - 2856582237.py:43 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 00:49:56,393 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 00:49:56,396 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 00:49:56,396 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 00:49:56,404 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 00:49:56,405 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 00:49:56,406 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 00:49:56,407 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 00:49:56,407 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:49:56,408 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 00:49:56,417 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 00:49:56,419 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 00:49:56,420 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 00:49:56,421 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 00:49:56,429 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 00:49:56,430 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 00:49:56,431 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 00:49:56,431 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 00:49:56,443 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,462 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,464 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 00:49:56,484 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,498 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 00:49:56,499 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 00:49:56,501 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 00:49:56,513 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:56,514 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 00:49:56,522 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:56,523 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:49:56,530 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 00:49:56,531 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 00:49:56,543 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 00:49:56,553 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 00:49:56,553 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 00:49:56,554 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 00:49:56,561 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,562 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 00:49:56,570 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,571 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 00:49:56,579 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 00:49:56,580 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 00:49:56,588 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 00:49:56,589 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 00:49:56,597 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 00:49:56,610 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 00:49:56,611 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 00:49:56,611 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 00:49:56,611 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 00:49:56,619 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:56,620 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 00:49:56,628 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 00:49:56,628 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 00:49:56,635 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 00:49:56,636 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 00:49:56,644 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 00:49:56,658 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 00:49:56,659 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 00:49:56,659 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 00:49:56,660 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:01:56,078 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:01:56,079 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:01:56,086 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:01:56,089 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:01:56,090 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:01:56,100 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:01:56,101 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:01:56,102 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:01:56,103 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:01:56,104 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:01:56,104 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:01:56,112 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:01:56,115 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:01:56,116 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:01:56,117 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:01:56,123 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:01:56,125 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:01:56,126 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:01:56,127 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:01:56,134 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,142 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,144 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:01:56,151 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,170 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:01:56,170 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:01:56,171 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:01:56,180 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:01:56,181 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:01:56,188 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:01:56,189 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:01:56,197 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:01:56,198 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:01:56,210 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:01:56,222 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:01:56,222 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:01:56,222 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:01:56,231 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,232 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:01:56,240 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,241 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:01:56,247 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:01:56,249 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:01:56,257 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:01:56,258 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:01:56,266 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:01:56,291 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:01:56,292 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:01:56,293 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:01:56,294 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:01:56,311 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:01:56,316 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:01:56,324 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:01:56,325 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:01:56,338 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:01:56,339 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:01:56,349 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:01:56,360 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:01:56,360 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:01:56,361 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:01:56,361 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:01:56,371 - ERROR - 52539532.py:7 - Librería 'prince' no encontrada. Por favor, instálala (`pip install prince`) para ejecutar Escenario 5 y 6.
2025-05-20 01:01:56,379 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:01:56,380 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:01:56,389 - INFO - 3884092931.py:24 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:02:10,205 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:02:10,206 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:02:10,225 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:02:10,229 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:02:10,230 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:02:10,245 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:02:10,247 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:02:10,248 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:02:10,249 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:02:10,251 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:02:10,251 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:02:10,267 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:02:10,274 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:02:10,278 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:02:10,278 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:02:10,287 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:02:10,288 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:02:10,289 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:02:10,289 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:02:10,302 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,309 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,310 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:02:10,319 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,334 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:02:10,335 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:02:10,335 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:02:10,343 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:02:10,344 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:02:10,350 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:02:10,352 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:02:10,359 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:02:10,360 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:02:10,371 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:02:10,381 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:02:10,382 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:02:10,382 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:02:10,389 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,390 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:02:10,397 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,399 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:02:10,407 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:02:10,408 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:02:10,416 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:02:10,417 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:02:10,437 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:02:10,450 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:02:10,450 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:02:10,451 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:02:10,451 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:02:10,457 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:02:10,459 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:02:10,467 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:02:10,468 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:02:10,478 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:02:10,479 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:02:10,488 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:02:10,500 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:02:10,500 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:02:10,501 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:02:10,501 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:02:10,510 - ERROR - 52539532.py:7 - Librería 'prince' no encontrada. Por favor, instálala (`pip install prince`) para ejecutar Escenario 5 y 6.
2025-05-20 01:02:10,517 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:02:10,519 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:02:10,527 - INFO - 3884092931.py:24 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:02:10,537 - INFO - 1515618474.py:13 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:02:10,538 - INFO - 1515618474.py:28 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:02:10,538 - INFO - 1515618474.py:39 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:02:10,539 - INFO - 1515618474.py:63 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:03:43,619 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:03:43,621 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:03:43,633 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:03:43,636 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:03:43,636 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:03:43,644 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:03:43,646 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:03:43,647 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:03:43,648 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:03:43,648 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:03:43,649 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:03:43,657 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:03:43,659 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:03:43,660 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:03:43,661 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:03:43,670 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:03:43,671 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:03:43,671 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:03:43,671 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:03:43,679 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,686 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,687 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:03:43,694 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,710 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:03:43,713 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:03:43,714 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:03:43,728 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:03:43,734 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:03:43,749 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:03:43,752 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:03:43,761 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:03:43,763 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:03:43,779 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:03:43,789 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:03:43,789 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:03:43,790 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:03:43,798 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,799 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:03:43,807 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,808 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:03:43,815 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:03:43,816 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:03:43,825 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:03:43,828 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:03:43,836 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:03:43,849 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:03:43,850 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:03:43,850 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:03:43,850 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:03:43,857 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:03:43,858 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:03:43,866 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:03:43,867 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:03:43,874 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:03:43,875 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:03:43,883 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:03:43,894 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:03:43,895 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:03:43,896 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:03:43,896 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:03:43,904 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:03:43,912 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:03:43,913 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:03:43,921 - INFO - 3884092931.py:24 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:03:43,934 - INFO - 1515618474.py:13 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:03:43,934 - INFO - 1515618474.py:28 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:03:43,935 - INFO - 1515618474.py:39 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:03:43,935 - INFO - 1515618474.py:63 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:04:59,098 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:06:38,857 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:06:38,858 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:06:38,887 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:06:38,890 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:06:38,890 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:06:38,898 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:06:38,899 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:06:38,900 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:06:38,900 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:06:38,901 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:06:38,901 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:06:38,912 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:06:38,914 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:06:38,915 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:06:38,916 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:06:38,924 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:06:38,925 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:06:38,926 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:06:38,927 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:06:38,933 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:38,942 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:38,943 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:06:38,953 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:38,966 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:06:38,967 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:06:38,967 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:06:38,976 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:38,977 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:06:38,984 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:38,985 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:06:38,993 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:06:38,994 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:06:39,008 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:06:39,018 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:06:39,018 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:06:39,019 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:06:39,028 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:39,028 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:06:39,035 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:39,036 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:06:39,045 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:39,046 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:06:39,055 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:06:39,056 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:06:39,065 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:06:39,079 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:06:39,079 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:06:39,079 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:06:39,080 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:06:39,087 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:39,088 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:06:39,096 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:39,097 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:06:39,104 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:06:39,105 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:06:39,112 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:06:39,122 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:06:39,123 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:06:39,123 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:06:39,123 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:06:39,132 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:06:39,140 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:06:39,140 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:06:39,148 - INFO - 3884092931.py:24 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:06:39,154 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:06:39,166 - INFO - 1683893898.py:14 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:06:39,172 - INFO - 1683893898.py:31 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:06:39,178 - ERROR - 1683893898.py:75 - Error durante el preprocesamiento del Escenario 5: '<' not supported between instances of 'int' and 'NoneType'
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1683893898.py", line 47, in <module>
    mca_object_s5.fit(X_train_mca_input)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/utils.py", line 28, in wrapper
    return func(*args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/mca.py", line 112, in fit
    super().fit(one_hot)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/utils.py", line 28, in wrapper
    return func(*args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/ca.py", line 89, in fit
    n_components=min(self.n_components, min(X.shape) - 1),
TypeError: '<' not supported between instances of 'int' and 'NoneType'
2025-05-20 01:06:49,431 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:06:49,433 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:06:49,461 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:06:49,465 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:06:49,466 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:06:49,482 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:06:49,488 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:06:49,489 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:06:49,491 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:06:49,492 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:06:49,493 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:06:49,508 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:06:49,512 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:06:49,513 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:06:49,514 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:06:49,522 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:06:49,523 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:06:49,524 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:06:49,525 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:06:49,538 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,546 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,547 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:06:49,556 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,570 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:06:49,570 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:06:49,570 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:06:49,578 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:49,578 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:06:49,587 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:49,588 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:06:49,595 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:06:49,596 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:06:49,609 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:06:49,619 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:06:49,620 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:06:49,620 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:06:49,627 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,627 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:06:49,636 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,637 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:06:49,644 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:06:49,645 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:06:49,655 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:06:49,655 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:06:49,665 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:06:49,678 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:06:49,678 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:06:49,678 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:06:49,679 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:06:49,687 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:49,688 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:06:49,697 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:06:49,698 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:06:49,705 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:06:49,706 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:06:49,715 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:06:49,726 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:06:49,726 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:06:49,727 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:06:49,727 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:06:49,735 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:06:49,743 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:06:49,744 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:06:49,752 - INFO - 3884092931.py:24 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year'].
2025-05-20 01:06:49,759 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:06:49,793 - INFO - 1683893898.py:14 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:06:49,804 - INFO - 1683893898.py:31 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:06:49,813 - ERROR - 1683893898.py:75 - Error durante el preprocesamiento del Escenario 5: '<' not supported between instances of 'int' and 'NoneType'
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1683893898.py", line 47, in <module>
    mca_object_s5.fit(X_train_mca_input)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/utils.py", line 28, in wrapper
    return func(*args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/mca.py", line 112, in fit
    super().fit(one_hot)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/utils.py", line 28, in wrapper
    return func(*args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/prince/ca.py", line 89, in fit
    n_components=min(self.n_components, min(X.shape) - 1),
TypeError: '<' not supported between instances of 'int' and 'NoneType'
2025-05-20 01:45:00,946 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:45:00,947 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:45:00,981 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:45:00,990 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:45:00,992 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:45:01,011 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:45:01,013 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:45:01,013 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:45:01,014 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:45:01,015 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:01,015 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:45:01,025 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:45:01,029 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:45:01,032 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:45:01,033 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:45:01,044 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:45:01,045 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:01,046 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:45:01,046 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:45:01,055 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,064 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,066 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:45:01,074 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,089 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:45:01,090 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:45:01,090 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:45:01,100 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:01,101 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:45:01,108 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:01,108 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:01,117 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:45:01,118 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:45:01,129 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:45:01,141 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:45:01,141 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:45:01,142 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:45:01,152 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,152 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:45:01,159 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,161 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:45:01,169 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:01,170 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:45:01,178 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:45:01,179 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:45:01,187 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:45:01,201 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:45:01,201 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:45:01,202 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:45:01,202 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:45:01,209 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:01,210 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:45:01,219 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:01,220 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:01,227 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:45:01,229 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:45:01,238 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:45:01,249 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:45:01,253 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:45:01,253 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:45:01,254 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:45:01,276 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:45:01,294 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:45:01,295 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:45:01,305 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:45:01,312 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:45:01,334 - INFO - 1683893898.py:14 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:45:01,340 - INFO - 1683893898.py:31 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:45:01,358 - INFO - 1683893898.py:56 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:45:01,359 - INFO - 1683893898.py:66 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:45:01,359 - INFO - 1683893898.py:67 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:45:01,360 - INFO - 1683893898.py:68 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:45:39,854 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:45:39,856 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:45:39,885 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:45:39,894 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:45:39,901 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:45:39,919 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:45:39,922 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:45:39,923 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:45:39,924 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:45:39,925 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:39,925 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:45:39,935 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:45:39,938 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:45:39,939 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:45:39,940 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:45:39,952 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:45:39,953 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:39,954 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:45:39,954 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:45:39,960 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:39,970 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:39,972 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:45:39,986 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:40,001 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:45:40,001 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:45:40,002 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:45:40,008 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:40,009 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:45:40,017 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:40,018 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:40,025 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:45:40,026 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:45:40,039 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:45:40,050 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:45:40,050 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:45:40,051 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:45:40,059 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:40,060 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:45:40,069 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:40,070 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:45:40,078 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:40,079 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:45:40,088 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:45:40,089 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:45:40,097 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:45:40,111 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:45:40,111 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:45:40,111 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:45:40,112 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:45:40,121 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:40,122 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:45:40,129 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:40,130 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:40,138 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:45:40,139 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:45:40,148 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:45:40,158 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:45:40,159 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:45:40,159 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:45:40,159 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:45:40,168 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:45:40,175 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:45:40,175 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:45:40,191 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:45:40,206 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:45:40,234 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:45:40,240 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:45:40,243 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:45:40,262 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:45:40,264 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:45:40,264 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:45:40,265 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:45:48,300 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:45:48,301 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:45:48,319 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:45:48,322 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:45:48,323 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:45:48,332 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:45:48,333 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:45:48,333 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:45:48,334 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:45:48,335 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:48,335 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:45:48,343 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:45:48,345 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:45:48,346 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:45:48,346 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:45:48,354 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:45:48,355 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:45:48,356 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:45:48,356 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:45:48,363 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,371 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,372 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:45:48,392 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,414 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:45:48,415 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:45:48,416 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:45:48,430 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:48,430 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:45:48,440 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:48,442 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:48,451 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:45:48,453 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:45:48,466 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:45:48,475 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:45:48,475 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:45:48,476 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:45:48,482 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,483 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:45:48,490 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,490 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:45:48,501 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:45:48,501 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:45:48,508 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:45:48,509 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:45:48,518 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:45:48,529 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:45:48,530 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:45:48,530 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:45:48,531 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:45:48,538 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:48,538 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:45:48,546 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:45:48,547 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:45:48,554 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:45:48,554 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:45:48,564 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:45:48,574 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:45:48,574 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:45:48,575 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:45:48,575 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:45:48,582 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:45:48,590 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:45:48,590 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:45:48,597 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:45:48,603 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:45:48,616 - INFO - 1683893898.py:14 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:45:48,622 - INFO - 1683893898.py:31 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:45:48,641 - INFO - 1683893898.py:56 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:45:48,647 - INFO - 1683893898.py:66 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:45:48,648 - INFO - 1683893898.py:67 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:45:48,648 - INFO - 1683893898.py:68 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:46:19,575 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:46:19,577 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:46:19,589 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:46:19,592 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:46:19,593 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:46:19,601 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:46:19,603 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:46:19,603 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:46:19,604 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:46:19,605 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:46:19,605 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:46:19,613 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:46:19,615 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:46:19,615 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:46:19,615 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:46:19,624 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:46:19,626 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:46:19,626 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:46:19,627 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:46:19,633 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,641 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,641 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:46:19,650 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,668 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:46:19,672 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:46:19,673 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:46:19,693 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:19,694 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:46:19,705 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:19,706 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:46:19,713 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:46:19,715 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:46:19,730 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:46:19,742 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:46:19,743 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:46:19,743 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:46:19,751 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,752 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:46:19,759 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,760 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:46:19,766 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:19,768 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:46:19,775 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:46:19,776 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:46:19,785 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:46:19,798 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:46:19,799 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:46:19,800 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:46:19,800 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:46:19,807 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:19,809 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:46:19,817 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:19,818 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:46:19,825 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:46:19,826 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:46:19,833 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:46:19,844 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:46:19,845 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:46:19,845 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:46:19,845 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:46:19,853 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:46:19,860 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:46:19,861 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:46:19,867 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:46:19,875 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:46:19,891 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:46:19,899 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:46:19,901 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:46:19,916 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:46:19,917 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:46:19,917 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:46:19,918 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:46:55,457 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:46:55,459 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:46:55,471 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:46:55,474 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:46:55,475 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:46:55,485 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:46:55,486 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:46:55,487 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:46:55,488 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:46:55,489 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:46:55,489 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:46:55,496 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:46:55,498 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:46:55,499 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:46:55,499 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:46:55,507 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:46:55,509 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:46:55,510 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:46:55,510 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:46:55,517 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,546 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,547 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:46:55,564 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,584 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:46:55,585 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:46:55,586 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:46:55,600 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:55,601 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:46:55,609 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:55,610 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:46:55,619 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:46:55,621 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:46:55,632 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:46:55,644 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:46:55,644 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:46:55,645 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:46:55,653 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,654 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:46:55,661 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,662 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:46:55,671 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:46:55,672 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:46:55,678 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:46:55,679 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:46:55,688 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:46:55,699 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:46:55,700 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:46:55,700 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:46:55,701 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:46:55,708 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:55,709 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:46:55,716 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:46:55,717 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:46:55,725 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:46:55,726 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:46:55,735 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:46:55,744 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:46:55,745 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:46:55,745 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:46:55,746 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:46:55,755 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:46:55,763 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:46:55,764 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:46:55,772 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:46:55,778 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:46:55,815 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:46:55,823 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:46:55,830 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:46:55,853 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:46:55,855 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:46:55,856 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:46:55,857 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:49:47,534 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:49:47,537 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:49:47,548 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:49:47,551 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:49:47,553 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:49:47,562 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:49:47,563 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:49:47,564 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:49:47,565 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:49:47,566 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:49:47,566 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:49:47,577 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:49:47,583 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:49:47,583 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:49:47,585 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:49:47,601 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:49:47,607 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:49:47,608 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:49:47,610 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:49:47,627 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,635 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,637 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:49:47,650 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,666 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:49:47,666 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:49:47,667 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:49:47,676 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:49:47,677 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:49:47,683 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:49:47,684 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:49:47,693 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:49:47,694 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:49:47,708 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:49:47,717 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:49:47,717 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:49:47,717 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:49:47,726 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,727 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:49:47,736 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,737 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:49:47,744 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:49:47,745 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:49:47,752 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:49:47,754 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:49:47,763 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:49:47,776 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:49:47,777 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:49:47,777 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:49:47,777 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:49:47,785 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:49:47,786 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:49:47,793 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:49:47,794 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:49:47,802 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:49:47,803 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:49:47,811 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:49:47,822 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:49:47,822 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:49:47,823 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:49:47,823 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:49:47,831 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:49:47,839 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:49:47,840 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:49:47,848 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:49:47,857 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:49:47,869 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:49:47,878 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:49:47,884 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:49:47,912 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:49:47,913 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:49:47,915 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:49:47,916 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:49:47,928 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:49:47,929 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:49:47,930 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:49:47,941 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:49:47,956 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:49:47,962 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:49:47,980 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:49:47,980 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:49:47,981 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:49:47,981 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:51:37,053 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:51:37,056 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:51:37,067 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:51:37,070 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:51:37,070 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:51:37,078 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:51:37,079 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:51:37,079 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:51:37,081 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:51:37,081 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:51:37,083 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:51:37,106 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:51:37,113 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:51:37,114 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:51:37,114 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:51:37,137 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:51:37,139 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:51:37,140 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:51:37,141 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:51:37,147 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,164 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,168 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:51:37,177 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,193 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:51:37,194 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:51:37,194 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:51:37,202 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:51:37,203 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:51:37,211 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:51:37,211 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:51:37,220 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:51:37,221 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:51:37,233 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:51:37,242 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:51:37,243 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:51:37,243 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:51:37,252 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,253 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:51:37,261 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,262 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:51:37,270 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:51:37,271 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:51:37,279 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:51:37,280 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:51:37,290 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:51:37,304 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:51:37,305 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:51:37,305 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:51:37,305 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:51:37,313 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:51:37,313 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:51:37,322 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:51:37,323 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:51:37,330 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:51:37,330 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:51:37,340 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:51:37,350 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:51:37,351 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:51:37,351 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:51:37,351 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:51:37,360 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:51:37,367 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:51:37,368 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:51:37,375 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:51:37,381 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:51:37,397 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:51:37,401 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:51:37,403 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:51:37,415 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:51:37,416 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:51:37,417 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:51:37,418 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:51:37,426 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:51:37,427 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:51:37,427 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:51:37,433 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:51:37,446 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:51:37,452 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:51:37,465 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:51:37,466 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:51:37,466 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:51:37,466 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:51:37,474 - INFO - 382370945.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 01:51:37,475 - INFO - 382370945.py:29 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 01:52:12,719 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:52:12,721 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:52:12,752 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:52:12,756 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:52:12,756 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:52:12,764 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:52:12,766 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:52:12,769 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:52:12,771 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:52:12,772 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:52:12,772 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:52:12,781 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:52:12,784 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:52:12,785 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:52:12,785 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:52:12,795 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:52:12,796 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:52:12,797 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:52:12,798 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:52:12,806 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,813 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,814 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:52:12,822 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,837 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:52:12,838 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:52:12,838 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:52:12,845 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:12,846 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:52:12,854 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:12,855 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:52:12,861 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:52:12,862 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:52:12,874 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:52:12,883 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:52:12,884 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:52:12,884 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:52:12,891 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,891 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:52:12,899 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,900 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:52:12,907 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:12,908 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:52:12,914 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:52:12,916 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:52:12,924 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:52:12,938 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:52:12,938 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:52:12,938 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:52:12,939 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:52:12,946 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:12,947 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:52:12,955 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:12,956 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:52:12,963 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:52:12,964 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:52:12,989 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:52:13,008 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:52:13,009 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:52:13,009 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:52:13,010 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:52:13,018 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:52:13,036 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:52:13,037 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:52:13,044 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:52:13,052 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:52:13,067 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:52:13,072 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:52:13,074 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:52:13,087 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:52:13,088 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:52:13,088 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:52:13,088 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:52:13,097 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:52:13,098 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:52:13,098 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:52:13,105 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:52:13,119 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:52:13,125 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:52:13,141 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:52:13,142 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:52:13,142 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:52:13,142 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:52:13,151 - INFO - 2685690712.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 01:52:13,152 - INFO - 2685690712.py:29 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 01:52:26,942 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:52:26,944 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:52:26,961 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:52:26,965 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:52:26,966 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:52:26,978 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:52:26,980 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:52:26,981 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:52:26,983 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:52:26,984 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:52:26,985 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:52:27,011 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:52:27,015 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:52:27,016 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:52:27,017 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:52:27,044 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:52:27,050 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:52:27,053 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:52:27,054 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:52:27,064 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,074 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,076 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:52:27,089 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,108 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:52:27,108 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:52:27,109 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:52:27,118 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:27,118 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:52:27,125 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:27,126 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:52:27,135 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:52:27,136 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:52:27,148 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:52:27,158 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:52:27,158 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:52:27,158 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:52:27,167 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,167 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:52:27,174 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,175 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:52:27,183 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:52:27,184 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:52:27,190 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:52:27,191 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:52:27,201 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:52:27,214 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:52:27,215 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:52:27,215 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:52:27,216 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:52:27,223 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:27,224 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:52:27,232 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:52:27,233 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:52:27,239 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:52:27,240 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:52:27,249 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:52:27,259 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:52:27,259 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:52:27,260 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:52:27,260 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:52:27,269 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:52:27,277 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:52:27,278 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:52:27,287 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:52:27,292 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:52:27,315 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:52:27,324 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:52:27,328 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:52:27,357 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:52:27,358 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:52:27,358 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:52:27,359 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:52:27,370 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:52:27,372 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:52:27,373 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:52:27,381 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:52:27,396 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:52:27,403 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:52:27,418 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:52:27,419 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:52:27,419 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:52:27,419 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:52:27,427 - INFO - 4168539025.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 01:52:27,428 - INFO - 4168539025.py:29 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 01:54:28,781 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:54:28,782 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:54:28,808 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:54:28,813 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:54:28,814 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:54:28,828 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:54:28,830 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:54:28,831 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:54:28,833 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:54:28,834 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:54:28,837 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:54:28,856 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:54:28,859 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:54:28,860 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:54:28,861 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:54:28,871 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:54:28,872 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:54:28,873 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:54:28,873 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:54:28,882 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,893 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,894 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:54:28,902 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,917 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:54:28,918 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:54:28,918 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:54:28,925 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:54:28,927 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:54:28,934 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:54:28,935 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:54:28,943 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:54:28,944 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:54:28,954 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:54:28,964 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:54:28,965 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:54:28,965 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:54:28,972 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,973 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:54:28,981 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,982 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:54:28,989 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:54:28,990 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:54:28,999 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:54:29,000 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:54:29,008 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:54:29,095 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:54:29,095 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:54:29,096 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:54:29,096 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:54:29,104 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:54:29,105 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:54:29,114 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:54:29,115 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:54:29,123 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:54:29,124 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:54:29,133 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:54:29,146 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:54:29,147 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:54:29,147 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:54:29,148 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:54:29,155 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:54:29,165 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:54:29,165 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:54:29,173 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:54:29,181 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:54:29,193 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:54:29,198 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:54:29,200 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:54:29,215 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:54:29,216 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:54:29,216 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:54:29,217 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:54:29,225 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:54:29,226 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:54:29,227 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:54:29,233 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:54:29,247 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:54:29,253 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:54:29,267 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:54:29,268 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:54:29,269 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:54:29,269 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:54:29,277 - INFO - 4168539025.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 01:54:29,279 - INFO - 4168539025.py:29 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 01:54:29,289 - INFO - 3824620224.py:39 - Función 'evaluate_regression_model' definida.
2025-05-20 01:56:07,875 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 01:56:07,877 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 01:56:07,888 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 01:56:07,891 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 01:56:07,892 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 01:56:07,902 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 01:56:07,903 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 01:56:07,903 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 01:56:07,906 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 01:56:07,907 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:56:07,908 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 01:56:07,928 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 01:56:07,931 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 01:56:07,934 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 01:56:07,935 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 01:56:07,953 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 01:56:07,954 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 01:56:07,957 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 01:56:07,958 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 01:56:07,969 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:07,977 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:07,978 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 01:56:07,991 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:08,010 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 01:56:08,011 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 01:56:08,011 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 01:56:08,023 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:56:08,025 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 01:56:08,034 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 01:56:08,035 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:56:08,045 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 01:56:08,046 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 01:56:08,064 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 01:56:08,081 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 01:56:08,082 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 01:56:08,083 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 01:56:08,093 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:08,094 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 01:56:08,104 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:08,106 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 01:56:08,113 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 01:56:08,114 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 01:56:08,121 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 01:56:08,122 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 01:56:08,129 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 01:56:08,142 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 01:56:08,143 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 01:56:08,143 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 01:56:08,143 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 01:56:08,150 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:56:08,151 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 01:56:08,160 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 01:56:08,160 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 01:56:08,167 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 01:56:08,168 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 01:56:08,176 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 01:56:08,185 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 01:56:08,185 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 01:56:08,186 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 01:56:08,186 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 01:56:08,194 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 01:56:08,202 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 01:56:08,203 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 01:56:08,212 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 01:56:08,218 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 01:56:08,231 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 01:56:08,236 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 01:56:08,238 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 01:56:08,252 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 01:56:08,253 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 01:56:08,254 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 01:56:08,254 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 01:56:08,262 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 01:56:08,264 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 01:56:08,265 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 01:56:08,286 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 01:56:08,300 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 01:56:08,308 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 01:56:08,324 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 01:56:08,325 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 01:56:08,325 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 01:56:08,325 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 01:56:08,332 - INFO - 4168539025.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 01:56:08,334 - INFO - 4168539025.py:29 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 01:56:08,344 - INFO - 3824620224.py:39 - Función 'evaluate_regression_model' definida.
2025-05-20 01:56:08,358 - INFO - 4123066427.py:32 - Iniciando bucle de entrenamiento y evaluación para todos los modelos y escenarios.
2025-05-20 01:56:08,358 - INFO - 4123066427.py:50 - --- Procesando Escenario: S1_RegionOHE_YearNum ---
2025-05-20 01:56:08,359 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,363 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, R2=0.7516
2025-05-20 01:56:08,364 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,368 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5861, R2=0.7176
2025-05-20 01:56:08,368 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,389 - INFO - 3824620224.py:34 - Evaluación para KNN en S1_RegionOHE_YearNum: RMSE=0.5106, R2=0.7856
2025-05-20 01:56:08,390 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,535 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S1_RegionOHE_YearNum: RMSE=0.4609, R2=0.8254
2025-05-20 01:56:08,535 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,687 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S1_RegionOHE_YearNum: RMSE=0.4688, R2=0.8193
2025-05-20 01:56:08,688 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S1_RegionOHE_YearNum.
2025-05-20 01:56:08,715 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S1_RegionOHE_YearNum: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:08,720 - INFO - 4123066427.py:50 - --- Procesando Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 01:56:08,721 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE.
2025-05-20 01:56:08,728 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, R2=0.7645
2025-05-20 01:56:08,729 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE.
2025-05-20 01:56:08,734 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5861, R2=0.7176
2025-05-20 01:56:08,735 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S2_RegionOHE_YearOHE.
2025-05-20 01:56:08,742 - INFO - 3824620224.py:34 - Evaluación para KNN en S2_RegionOHE_YearOHE: RMSE=0.5283, R2=0.7706
2025-05-20 01:56:08,743 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S2_RegionOHE_YearOHE.
2025-05-20 01:56:08,901 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S2_RegionOHE_YearOHE: RMSE=0.4641, R2=0.8229
2025-05-20 01:56:08,902 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S2_RegionOHE_YearOHE.
2025-05-20 01:56:09,064 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S2_RegionOHE_YearOHE: RMSE=0.4705, R2=0.8180
2025-05-20 01:56:09,064 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S2_RegionOHE_YearOHE.
2025-05-20 01:56:09,070 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S2_RegionOHE_YearOHE: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:09,076 - INFO - 4123066427.py:50 - --- Procesando Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 01:56:09,077 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,083 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, R2=0.7376
2025-05-20 01:56:09,083 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,087 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.6144, R2=0.6896
2025-05-20 01:56:09,088 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,098 - INFO - 3824620224.py:34 - Evaluación para KNN en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, R2=0.7783
2025-05-20 01:56:09,099 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,245 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, R2=0.8295
2025-05-20 01:56:09,246 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,376 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, R2=0.8191
2025-05-20 01:56:09,377 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S3_PCA_RegionOHE_YearNum.
2025-05-20 01:56:09,384 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S3_PCA_RegionOHE_YearNum: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:09,388 - INFO - 4123066427.py:50 - --- Procesando Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 01:56:09,388 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,396 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, R2=0.7559
2025-05-20 01:56:09,400 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,409 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.6144, R2=0.6896
2025-05-20 01:56:09,410 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,457 - INFO - 3824620224.py:34 - Evaluación para KNN en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, R2=0.7662
2025-05-20 01:56:09,458 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,623 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, R2=0.8322
2025-05-20 01:56:09,624 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,764 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, R2=0.8166
2025-05-20 01:56:09,765 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S4_PCA_RegionOHE_YearOHE.
2025-05-20 01:56:09,772 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S4_PCA_RegionOHE_YearOHE: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:09,773 - INFO - 4123066427.py:50 - --- Procesando Escenario: S5_MCA_NumScaled_NoPCA ---
2025-05-20 01:56:09,780 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,783 - ERROR - 4123066427.py:88 - Error entrenando o evaluando LinearReg_Ridge en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,793 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,795 - ERROR - 4123066427.py:88 - Error entrenando o evaluando LinearReg_Lasso en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,797 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,798 - ERROR - 4123066427.py:88 - Error entrenando o evaluando KNN en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,799 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,915 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S5_MCA_NumScaled_NoPCA: RMSE=0.5065, R2=0.7891
2025-05-20 01:56:09,915 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,917 - ERROR - 4123066427.py:88 - Error entrenando o evaluando GradientBoosting en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,917 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S5_MCA_NumScaled_NoPCA.
2025-05-20 01:56:09,921 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S5_MCA_NumScaled_NoPCA: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:09,923 - INFO - 4123066427.py:50 - --- Procesando Escenario: S6_MCA_NumPCA ---
2025-05-20 01:56:09,926 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S6_MCA_NumPCA.
2025-05-20 01:56:09,929 - ERROR - 4123066427.py:88 - Error entrenando o evaluando LinearReg_Ridge en S6_MCA_NumPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,929 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S6_MCA_NumPCA.
2025-05-20 01:56:09,931 - ERROR - 4123066427.py:88 - Error entrenando o evaluando LinearReg_Lasso en S6_MCA_NumPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,932 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: KNN en S6_MCA_NumPCA.
2025-05-20 01:56:09,933 - ERROR - 4123066427.py:88 - Error entrenando o evaluando KNN en S6_MCA_NumPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:09,937 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: RandomForest en S6_MCA_NumPCA.
2025-05-20 01:56:10,057 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S6_MCA_NumPCA: RMSE=0.5255, R2=0.7730
2025-05-20 01:56:10,058 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: GradientBoosting en S6_MCA_NumPCA.
2025-05-20 01:56:10,059 - ERROR - 4123066427.py:88 - Error entrenando o evaluando GradientBoosting en S6_MCA_NumPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 01:56:10,060 - INFO - 4123066427.py:57 - Entrenando y evaluando modelo: XGBoost en S6_MCA_NumPCA.
2025-05-20 01:56:10,063 - ERROR - 4123066427.py:88 - Error entrenando o evaluando XGBoost en S6_MCA_NumPCA: Must have at least 1 validation dataset for early stopping.
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/4123066427.py", line 71, in <module>
    model_instance.fit(current_X_train, y_train) # Entrenamiento simple
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/sklearn.py", line 1247, in fit
    self._Booster = train(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/core.py", line 729, in inner_f
    return func(**kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/training.py", line 184, in train
    if cb_container.after_iteration(bst, i, dtrain, evals):
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in after_iteration
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 267, in <genexpr>
    ret = any(c.after_iteration(model, epoch, self.history) for c in self.callbacks)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/xgboost/callback.py", line 463, in after_iteration
    raise ValueError(msg)
ValueError: Must have at least 1 validation dataset for early stopping.
2025-05-20 01:56:10,066 - INFO - 4123066427.py:97 - Bucle de entrenamiento y evaluación completado.
2025-05-20 02:02:56,331 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:02:56,332 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:02:56,356 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:02:56,361 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:02:56,361 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:02:56,370 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:02:56,371 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:02:56,371 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:02:56,372 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:02:56,374 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:02:56,374 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:02:56,383 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:02:56,385 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:02:56,386 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:02:56,387 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:02:56,395 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:02:56,396 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:02:56,397 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:02:56,397 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:02:56,404 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,412 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,413 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:02:56,424 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,438 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:02:56,438 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:02:56,438 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:02:56,447 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:02:56,448 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:02:56,455 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:02:56,455 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:02:56,463 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:02:56,464 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:02:56,491 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:02:56,519 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:02:56,519 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:02:56,520 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:02:56,529 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,533 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:02:56,545 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,546 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:02:56,553 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:02:56,554 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:02:56,562 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:02:56,564 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:02:56,572 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:02:56,586 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:02:56,586 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:02:56,587 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:02:56,587 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:02:56,596 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:02:56,597 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:02:56,603 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:02:56,604 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:02:56,612 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:02:56,613 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:02:56,621 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:02:56,632 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:02:56,633 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:02:56,633 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:02:56,633 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:02:56,641 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 02:02:56,649 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 02:02:56,650 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 02:02:56,658 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 02:02:56,665 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 02:02:56,678 - INFO - 1504767854.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 02:02:56,683 - INFO - 1504767854.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 02:02:56,684 - INFO - 1504767854.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 02:02:56,698 - INFO - 1504767854.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 02:02:56,699 - INFO - 1504767854.py:74 - Preprocesamiento del Escenario 5 (Numérico + MCA) completado.
2025-05-20 02:02:56,699 - INFO - 1504767854.py:75 - Forma final de X_train_s5: (625, 8)
2025-05-20 02:02:56,700 - INFO - 1504767854.py:76 - Forma final de X_test_s5: (157, 8)
2025-05-20 02:02:56,708 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 02:02:56,709 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 02:02:56,710 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 02:02:56,715 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 02:02:56,729 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 02:02:56,736 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 02:02:56,751 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 02:02:56,752 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 02:02:56,752 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 02:02:56,753 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 02:02:56,760 - INFO - 3248382285.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 02:02:56,762 - INFO - 3248382285.py:28 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 02:02:56,769 - INFO - 3824620224.py:39 - Función 'evaluate_regression_model' definida.
2025-05-20 02:02:56,785 - INFO - 1646314554.py:32 - Iniciando bucle de entrenamiento y evaluación para todos los modelos y escenarios.
2025-05-20 02:02:56,786 - INFO - 1646314554.py:50 - --- Procesando Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:02:56,787 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S1_RegionOHE_YearNum.
2025-05-20 02:02:56,793 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, R2=0.7516
2025-05-20 02:02:56,794 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S1_RegionOHE_YearNum.
2025-05-20 02:02:56,798 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5861, R2=0.7176
2025-05-20 02:02:56,799 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S1_RegionOHE_YearNum.
2025-05-20 02:02:56,802 - INFO - 3824620224.py:34 - Evaluación para KNN en S1_RegionOHE_YearNum: RMSE=0.5106, R2=0.7856
2025-05-20 02:02:56,803 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S1_RegionOHE_YearNum.
2025-05-20 02:02:56,951 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S1_RegionOHE_YearNum: RMSE=0.4609, R2=0.8254
2025-05-20 02:02:56,952 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S1_RegionOHE_YearNum.
2025-05-20 02:02:57,091 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S1_RegionOHE_YearNum: RMSE=0.4688, R2=0.8193
2025-05-20 02:02:57,092 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S1_RegionOHE_YearNum.
2025-05-20 02:02:57,162 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S1_RegionOHE_YearNum: RMSE=0.4637, R2=0.8233
2025-05-20 02:02:57,163 - INFO - 1646314554.py:50 - --- Procesando Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:02:57,164 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,169 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, R2=0.7645
2025-05-20 02:02:57,170 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,175 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5861, R2=0.7176
2025-05-20 02:02:57,176 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,179 - INFO - 3824620224.py:34 - Evaluación para KNN en S2_RegionOHE_YearOHE: RMSE=0.5283, R2=0.7706
2025-05-20 02:02:57,180 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,346 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S2_RegionOHE_YearOHE: RMSE=0.4641, R2=0.8229
2025-05-20 02:02:57,348 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,512 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S2_RegionOHE_YearOHE: RMSE=0.4705, R2=0.8180
2025-05-20 02:02:57,513 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S2_RegionOHE_YearOHE.
2025-05-20 02:02:57,739 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S2_RegionOHE_YearOHE: RMSE=0.4712, R2=0.8175
2025-05-20 02:02:57,740 - INFO - 1646314554.py:50 - --- Procesando Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:02:57,741 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:57,745 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, R2=0.7376
2025-05-20 02:02:57,746 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:57,750 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.6144, R2=0.6896
2025-05-20 02:02:57,750 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:57,756 - INFO - 3824620224.py:34 - Evaluación para KNN en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, R2=0.7783
2025-05-20 02:02:57,757 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:57,883 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, R2=0.8295
2025-05-20 02:02:57,884 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:58,029 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, R2=0.8191
2025-05-20 02:02:58,030 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:02:58,121 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S3_PCA_RegionOHE_YearNum: RMSE=0.4491, R2=0.8342
2025-05-20 02:02:58,122 - INFO - 1646314554.py:50 - --- Procesando Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:02:58,123 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,127 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, R2=0.7559
2025-05-20 02:02:58,127 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,131 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.6144, R2=0.6896
2025-05-20 02:02:58,131 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,140 - INFO - 3824620224.py:34 - Evaluación para KNN en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, R2=0.7662
2025-05-20 02:02:58,141 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,278 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, R2=0.8322
2025-05-20 02:02:58,278 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,409 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, R2=0.8166
2025-05-20 02:02:58,410 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:02:58,491 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S4_PCA_RegionOHE_YearOHE: RMSE=0.4699, R2=0.8185
2025-05-20 02:02:58,492 - INFO - 1646314554.py:50 - --- Procesando Escenario: S5_MCA_NumScaled_NoPCA ---
2025-05-20 02:02:58,492 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,494 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Ridge en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,495 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,496 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Lasso en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,496 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,497 - ERROR - 1646314554.py:88 - Error entrenando o evaluando KNN en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,498 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,614 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S5_MCA_NumScaled_NoPCA: RMSE=0.5065, R2=0.7891
2025-05-20 02:02:58,614 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,616 - ERROR - 1646314554.py:88 - Error entrenando o evaluando GradientBoosting en S5_MCA_NumScaled_NoPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,616 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S5_MCA_NumScaled_NoPCA.
2025-05-20 02:02:58,705 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S5_MCA_NumScaled_NoPCA: RMSE=0.5252, R2=0.7732
2025-05-20 02:02:58,707 - INFO - 1646314554.py:50 - --- Procesando Escenario: S6_MCA_NumPCA ---
2025-05-20 02:02:58,708 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S6_MCA_NumPCA.
2025-05-20 02:02:58,709 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Ridge en S6_MCA_NumPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,712 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S6_MCA_NumPCA.
2025-05-20 02:02:58,714 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Lasso en S6_MCA_NumPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,714 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S6_MCA_NumPCA.
2025-05-20 02:02:58,716 - ERROR - 1646314554.py:88 - Error entrenando o evaluando KNN en S6_MCA_NumPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,716 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S6_MCA_NumPCA.
2025-05-20 02:02:58,835 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S6_MCA_NumPCA: RMSE=0.5255, R2=0.7730
2025-05-20 02:02:58,835 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S6_MCA_NumPCA.
2025-05-20 02:02:58,837 - ERROR - 1646314554.py:88 - Error entrenando o evaluando GradientBoosting en S6_MCA_NumPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:02:58,838 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S6_MCA_NumPCA.
2025-05-20 02:02:58,917 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S6_MCA_NumPCA: RMSE=0.5453, R2=0.7556
2025-05-20 02:02:58,918 - INFO - 1646314554.py:97 - Bucle de entrenamiento y evaluación completado.
2025-05-20 02:04:18,797 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:04:18,798 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:04:18,833 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:04:18,839 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:04:18,839 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:04:18,857 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:04:18,865 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:04:18,865 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:04:18,868 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:04:18,871 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:04:18,872 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:04:18,880 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:04:18,883 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:04:18,885 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:04:18,885 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:04:18,897 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:04:18,898 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:04:18,899 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:04:18,901 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:04:18,909 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:18,915 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:18,917 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:04:18,928 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:18,942 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:04:18,942 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:04:18,942 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:04:18,950 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:04:18,951 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:04:18,959 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:04:18,960 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:04:18,967 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:04:18,968 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:04:18,979 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:04:18,989 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:04:18,990 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:04:18,990 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:04:18,997 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:18,998 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:04:19,006 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:19,007 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:04:19,014 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:04:19,015 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:04:19,024 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:04:19,025 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:04:19,034 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:04:19,048 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:04:19,049 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:04:19,049 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:04:19,049 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:04:19,059 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:04:19,060 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:04:19,067 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:04:19,068 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:04:19,076 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:04:19,077 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:04:19,086 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:04:19,097 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:04:19,098 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:04:19,098 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:04:19,098 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:04:19,108 - INFO - 1778355520.py:9 - Librería 'prince' para MCA importada exitosamente.
2025-05-20 02:04:19,115 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 02:04:19,116 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 02:04:19,124 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 02:04:19,130 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 02:04:19,151 - INFO - 1257842865.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 02:04:19,159 - INFO - 1257842865.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 02:04:19,163 - INFO - 1257842865.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 02:04:19,186 - INFO - 1257842865.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 02:04:19,188 - WARNING - 1257842865.py:76 - Se encontraron NaNs en X_train_s5_intermediate. Aplicando SimpleImputer (mediana).
2025-05-20 02:04:19,198 - ERROR - 1257842865.py:108 - Error durante el preprocesamiento del Escenario 5: Shape of passed values is (625, 6), indices imply (625, 8)
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1257842865.py", line 87, in <module>
    X_train_s5 = pd.DataFrame(X_train_s5_np_imputed, columns=X_train_s5_intermediate.columns, index=X_train_s5_intermediate.index)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 827, in __init__
    mgr = ndarray_to_mgr(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (625, 6), indices imply (625, 8)
2025-05-20 02:04:19,213 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 02:04:19,215 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 02:04:19,216 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 02:04:19,223 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 02:04:19,241 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 02:04:19,248 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 02:04:19,264 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 02:04:19,266 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 02:04:19,267 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 02:04:19,268 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 02:04:19,278 - INFO - 3248382285.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 02:04:19,279 - INFO - 3248382285.py:28 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 02:04:19,288 - INFO - 3824620224.py:39 - Función 'evaluate_regression_model' definida.
2025-05-20 02:04:19,305 - INFO - 1646314554.py:32 - Iniciando bucle de entrenamiento y evaluación para todos los modelos y escenarios.
2025-05-20 02:04:19,306 - INFO - 1646314554.py:50 - --- Procesando Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:04:19,307 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,314 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, R2=0.7516
2025-05-20 02:04:19,315 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,322 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5861, R2=0.7176
2025-05-20 02:04:19,322 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,326 - INFO - 3824620224.py:34 - Evaluación para KNN en S1_RegionOHE_YearNum: RMSE=0.5106, R2=0.7856
2025-05-20 02:04:19,327 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,481 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S1_RegionOHE_YearNum: RMSE=0.4609, R2=0.8254
2025-05-20 02:04:19,482 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,614 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S1_RegionOHE_YearNum: RMSE=0.4688, R2=0.8193
2025-05-20 02:04:19,615 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S1_RegionOHE_YearNum.
2025-05-20 02:04:19,713 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S1_RegionOHE_YearNum: RMSE=0.4637, R2=0.8233
2025-05-20 02:04:19,714 - INFO - 1646314554.py:50 - --- Procesando Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:04:19,714 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE.
2025-05-20 02:04:19,719 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, R2=0.7645
2025-05-20 02:04:19,720 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE.
2025-05-20 02:04:19,724 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5861, R2=0.7176
2025-05-20 02:04:19,725 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S2_RegionOHE_YearOHE.
2025-05-20 02:04:19,731 - INFO - 3824620224.py:34 - Evaluación para KNN en S2_RegionOHE_YearOHE: RMSE=0.5283, R2=0.7706
2025-05-20 02:04:19,732 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S2_RegionOHE_YearOHE.
2025-05-20 02:04:19,890 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S2_RegionOHE_YearOHE: RMSE=0.4641, R2=0.8229
2025-05-20 02:04:19,891 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S2_RegionOHE_YearOHE.
2025-05-20 02:04:20,039 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S2_RegionOHE_YearOHE: RMSE=0.4705, R2=0.8180
2025-05-20 02:04:20,040 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S2_RegionOHE_YearOHE.
2025-05-20 02:04:20,278 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S2_RegionOHE_YearOHE: RMSE=0.4712, R2=0.8175
2025-05-20 02:04:20,279 - INFO - 1646314554.py:50 - --- Procesando Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:04:20,279 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,282 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, R2=0.7376
2025-05-20 02:04:20,283 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,287 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.6144, R2=0.6896
2025-05-20 02:04:20,287 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,292 - INFO - 3824620224.py:34 - Evaluación para KNN en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, R2=0.7783
2025-05-20 02:04:20,293 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,401 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, R2=0.8295
2025-05-20 02:04:20,402 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,538 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, R2=0.8191
2025-05-20 02:04:20,539 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:04:20,739 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S3_PCA_RegionOHE_YearNum: RMSE=0.4491, R2=0.8342
2025-05-20 02:04:20,740 - INFO - 1646314554.py:50 - --- Procesando Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:04:20,741 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:20,744 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, R2=0.7559
2025-05-20 02:04:20,745 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:20,748 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.6144, R2=0.6896
2025-05-20 02:04:20,749 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:20,758 - INFO - 3824620224.py:34 - Evaluación para KNN en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, R2=0.7662
2025-05-20 02:04:20,759 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:20,881 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, R2=0.8322
2025-05-20 02:04:20,882 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:21,030 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, R2=0.8166
2025-05-20 02:04:21,031 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:04:21,138 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S4_PCA_RegionOHE_YearOHE: RMSE=0.4699, R2=0.8185
2025-05-20 02:04:21,138 - WARNING - 1646314554.py:39 - Datos para S5_MCA_NumScaled_NoPCA no disponibles o vacíos. Omitiendo este escenario.
2025-05-20 02:04:21,140 - INFO - 1646314554.py:50 - --- Procesando Escenario: S6_MCA_NumPCA ---
2025-05-20 02:04:21,140 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S6_MCA_NumPCA.
2025-05-20 02:04:21,142 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Ridge en S6_MCA_NumPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:04:21,142 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S6_MCA_NumPCA.
2025-05-20 02:04:21,144 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Lasso en S6_MCA_NumPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:04:21,144 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S6_MCA_NumPCA.
2025-05-20 02:04:21,145 - ERROR - 1646314554.py:88 - Error entrenando o evaluando KNN en S6_MCA_NumPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:04:21,146 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S6_MCA_NumPCA.
2025-05-20 02:04:21,329 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S6_MCA_NumPCA: RMSE=0.5255, R2=0.7730
2025-05-20 02:04:21,331 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S6_MCA_NumPCA.
2025-05-20 02:04:21,333 - ERROR - 1646314554.py:88 - Error entrenando o evaluando GradientBoosting en S6_MCA_NumPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:04:21,334 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S6_MCA_NumPCA.
2025-05-20 02:04:21,478 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S6_MCA_NumPCA: RMSE=0.5453, R2=0.7556
2025-05-20 02:04:21,478 - INFO - 1646314554.py:97 - Bucle de entrenamiento y evaluación completado.
2025-05-20 02:13:52,256 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:13:52,257 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:13:52,268 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:13:52,271 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:13:52,271 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:13:52,279 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:13:52,280 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:13:52,281 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:13:52,282 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:13:52,283 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:13:52,283 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:13:52,301 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:13:52,314 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:13:52,315 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:13:52,316 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:13:52,336 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:13:52,338 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:13:52,339 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:13:52,340 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:13:52,350 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,358 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,360 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:13:52,368 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,386 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:13:52,387 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:13:52,387 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:13:52,397 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:13:52,398 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:13:52,407 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:13:52,408 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:13:52,416 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:13:52,417 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:13:52,429 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:13:52,438 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:13:52,438 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:13:52,439 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:13:52,447 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,448 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:13:52,456 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,458 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:13:52,465 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:13:52,466 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:13:52,473 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:13:52,475 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:13:52,498 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:13:52,511 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:13:52,512 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:13:52,512 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:13:52,512 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:13:52,519 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:13:52,520 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:13:52,527 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:13:52,528 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:13:52,535 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:13:52,536 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:13:52,544 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:13:52,556 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:13:52,558 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:13:52,559 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:13:52,560 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:13:52,569 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:13:52,571 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:13:52,582 - INFO - 4288857762.py:7 - Configurando Preprocesador para Escenario 5: Numéricas (Escaladas), 'region' y 'year' (MCA).
2025-05-20 02:13:52,583 - INFO - 4288857762.py:16 - Transformador numérico para Escenario 5 definido (StandardScaler).
2025-05-20 02:13:52,590 - INFO - 4286957788.py:34 - Objeto MCA para Escenario 5 definido para columnas: ['region', 'year']. (n_components se dejará al default de Prince o un valor fijo)
2025-05-20 02:13:52,598 - INFO - 1488673776.py:3 - Para Escenario 5 (MCA), las transformaciones numéricas y MCA se aplicarán y combinarán en la siguiente celda.
2025-05-20 02:13:52,614 - INFO - 1257842865.py:18 - Aplicando preprocesamiento numérico y MCA para Escenario 5.
2025-05-20 02:13:52,620 - INFO - 1257842865.py:28 - Features numéricas procesadas para Escenario 5. Forma: (625, 6)
2025-05-20 02:13:52,623 - INFO - 1257842865.py:52 - Ajustando MCA en X_train_mca_input con forma: (625, 2)
2025-05-20 02:13:52,641 - INFO - 1257842865.py:62 - Coordenadas MCA generadas para Escenario 5. Forma: (625, 2)
2025-05-20 02:13:52,644 - WARNING - 1257842865.py:76 - Se encontraron NaNs en X_train_s5_intermediate. Aplicando SimpleImputer (mediana).
2025-05-20 02:13:52,650 - ERROR - 1257842865.py:108 - Error durante el preprocesamiento del Escenario 5: Shape of passed values is (625, 6), indices imply (625, 8)
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1257842865.py", line 87, in <module>
    X_train_s5 = pd.DataFrame(X_train_s5_np_imputed, columns=X_train_s5_intermediate.columns, index=X_train_s5_intermediate.index)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/frame.py", line 827, in __init__
    mgr = ndarray_to_mgr(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 336, in ndarray_to_mgr
    _check_values_indices_shape_match(values, index, columns)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/pandas/core/internals/construction.py", line 420, in _check_values_indices_shape_match
    raise ValueError(f"Shape of passed values is {passed}, indices imply {implied}")
ValueError: Shape of passed values is (625, 6), indices imply (625, 8)
2025-05-20 02:13:52,657 - INFO - 2961810045.py:10 - Configurando Preprocesador para Escenario 6: PCA en numéricas, 'region' y 'year' (MCA).
2025-05-20 02:13:52,660 - INFO - 2961810045.py:22 - Transformador numérico para Escenario 6 definido (StandardScaler + PCA).
2025-05-20 02:13:52,661 - INFO - 2961810045.py:39 - Objeto MCA para Escenario 6 definido para columnas: ['region', 'year'].
2025-05-20 02:13:52,667 - INFO - 445915943.py:3 - Para Escenario 6 (PCA + MCA), las transformaciones se aplicarán por partes y luego se combinarán.
2025-05-20 02:13:52,680 - INFO - 2734189404.py:18 - Aplicando PCA a numéricas y MCA a categóricas para Escenario 6.
2025-05-20 02:13:52,685 - INFO - 2734189404.py:35 - Componentes PCA generados para Escenario 6. Forma: (625, 5)
2025-05-20 02:13:52,700 - INFO - 2734189404.py:61 - Coordenadas MCA generadas para Escenario 6. Forma: (625, 2)
2025-05-20 02:13:52,701 - INFO - 2734189404.py:71 - Preprocesamiento del Escenario 6 (PCA + MCA) completado.
2025-05-20 02:13:52,701 - INFO - 2734189404.py:72 - Forma final de X_train_s6: (625, 7)
2025-05-20 02:13:52,701 - INFO - 2734189404.py:73 - Forma final de X_test_s6: (157, 7)
2025-05-20 02:13:52,708 - INFO - 3248382285.py:9 - Definiendo la lista de modelos de regresión para experimentar.
2025-05-20 02:13:52,709 - INFO - 3248382285.py:28 - Modelos definidos para probar: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN', 'RandomForest', 'GradientBoosting', 'XGBoost']
2025-05-20 02:13:52,718 - INFO - 3824620224.py:39 - Función 'evaluate_regression_model' definida.
2025-05-20 02:13:52,731 - INFO - 1646314554.py:32 - Iniciando bucle de entrenamiento y evaluación para todos los modelos y escenarios.
2025-05-20 02:13:52,732 - INFO - 1646314554.py:50 - --- Procesando Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:13:52,732 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S1_RegionOHE_YearNum.
2025-05-20 02:13:52,736 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, R2=0.7516
2025-05-20 02:13:52,737 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S1_RegionOHE_YearNum.
2025-05-20 02:13:52,740 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5861, R2=0.7176
2025-05-20 02:13:52,740 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S1_RegionOHE_YearNum.
2025-05-20 02:13:52,745 - INFO - 3824620224.py:34 - Evaluación para KNN en S1_RegionOHE_YearNum: RMSE=0.5106, R2=0.7856
2025-05-20 02:13:52,746 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S1_RegionOHE_YearNum.
2025-05-20 02:13:52,881 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S1_RegionOHE_YearNum: RMSE=0.4609, R2=0.8254
2025-05-20 02:13:52,882 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S1_RegionOHE_YearNum.
2025-05-20 02:13:53,032 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S1_RegionOHE_YearNum: RMSE=0.4688, R2=0.8193
2025-05-20 02:13:53,032 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S1_RegionOHE_YearNum.
2025-05-20 02:13:53,167 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S1_RegionOHE_YearNum: RMSE=0.4637, R2=0.8233
2025-05-20 02:13:53,168 - INFO - 1646314554.py:50 - --- Procesando Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:13:53,168 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,172 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, R2=0.7645
2025-05-20 02:13:53,172 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,176 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5861, R2=0.7176
2025-05-20 02:13:53,177 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,185 - INFO - 3824620224.py:34 - Evaluación para KNN en S2_RegionOHE_YearOHE: RMSE=0.5283, R2=0.7706
2025-05-20 02:13:53,186 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,311 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S2_RegionOHE_YearOHE: RMSE=0.4641, R2=0.8229
2025-05-20 02:13:53,311 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,446 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S2_RegionOHE_YearOHE: RMSE=0.4705, R2=0.8180
2025-05-20 02:13:53,447 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S2_RegionOHE_YearOHE.
2025-05-20 02:13:53,547 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S2_RegionOHE_YearOHE: RMSE=0.4712, R2=0.8175
2025-05-20 02:13:53,549 - INFO - 1646314554.py:50 - --- Procesando Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:13:53,549 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:53,553 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, R2=0.7376
2025-05-20 02:13:53,554 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:53,559 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.6144, R2=0.6896
2025-05-20 02:13:53,561 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:53,567 - INFO - 3824620224.py:34 - Evaluación para KNN en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, R2=0.7783
2025-05-20 02:13:53,567 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:53,769 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, R2=0.8295
2025-05-20 02:13:53,770 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:53,891 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, R2=0.8191
2025-05-20 02:13:53,892 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S3_PCA_RegionOHE_YearNum.
2025-05-20 02:13:54,179 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S3_PCA_RegionOHE_YearNum: RMSE=0.4491, R2=0.8342
2025-05-20 02:13:54,180 - INFO - 1646314554.py:50 - --- Procesando Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:13:54,180 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,186 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, R2=0.7559
2025-05-20 02:13:54,187 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,192 - INFO - 3824620224.py:34 - Evaluación para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.6144, R2=0.6896
2025-05-20 02:13:54,193 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,197 - INFO - 3824620224.py:34 - Evaluación para KNN en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, R2=0.7662
2025-05-20 02:13:54,198 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,333 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, R2=0.8322
2025-05-20 02:13:54,335 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,462 - INFO - 3824620224.py:34 - Evaluación para GradientBoosting en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, R2=0.8166
2025-05-20 02:13:54,463 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S4_PCA_RegionOHE_YearOHE.
2025-05-20 02:13:54,579 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S4_PCA_RegionOHE_YearOHE: RMSE=0.4699, R2=0.8185
2025-05-20 02:13:54,579 - WARNING - 1646314554.py:39 - Datos para S5_MCA_NumScaled_NoPCA no disponibles o vacíos. Omitiendo este escenario.
2025-05-20 02:13:54,580 - INFO - 1646314554.py:50 - --- Procesando Escenario: S6_MCA_NumPCA ---
2025-05-20 02:13:54,580 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Ridge en S6_MCA_NumPCA.
2025-05-20 02:13:54,582 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Ridge en S6_MCA_NumPCA: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_ridge.py", line 1239, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Ridge does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:13:54,584 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: LinearReg_Lasso en S6_MCA_NumPCA.
2025-05-20 02:13:54,586 - ERROR - 1646314554.py:88 - Error entrenando o evaluando LinearReg_Lasso en S6_MCA_NumPCA: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/linear_model/_coordinate_descent.py", line 982, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
Lasso does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:13:54,587 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: KNN en S6_MCA_NumPCA.
2025-05-20 02:13:54,588 - ERROR - 1646314554.py:88 - Error entrenando o evaluando KNN en S6_MCA_NumPCA: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_regression.py", line 222, in fit
    return self._fit(X, y)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/neighbors/_base.py", line 478, in _fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
KNeighborsRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:13:54,589 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: RandomForest en S6_MCA_NumPCA.
2025-05-20 02:13:54,713 - INFO - 3824620224.py:34 - Evaluación para RandomForest en S6_MCA_NumPCA: RMSE=0.5255, R2=0.7730
2025-05-20 02:13:54,714 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: GradientBoosting en S6_MCA_NumPCA.
2025-05-20 02:13:54,715 - ERROR - 1646314554.py:88 - Error entrenando o evaluando GradientBoosting en S6_MCA_NumPCA: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
Traceback (most recent call last):
  File "/tmp/ipykernel_520691/1646314554.py", line 74, in <module>
    model_instance.fit(current_X_train, y_train)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/base.py", line 1389, in wrapper
    return fit_method(estimator, *args, **kwargs)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/ensemble/_gb.py", line 658, in fit
    X, y = validate_data(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 2961, in validate_data
    X, y = check_X_y(X, y, **check_params)
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1370, in check_X_y
    X = check_array(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 1107, in check_array
    _assert_all_finite(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 120, in _assert_all_finite
    _assert_all_finite_element_wise(
  File "/home/nicolas/Escritorio/workshops ETL/workshop_3/venv/lib/python3.10/site-packages/sklearn/utils/validation.py", line 169, in _assert_all_finite_element_wise
    raise ValueError(msg_err)
ValueError: Input X contains NaN.
GradientBoostingRegressor does not accept missing values encoded as NaN natively. For supervised learning, you might want to consider sklearn.ensemble.HistGradientBoostingClassifier and Regressor which accept missing values encoded as NaNs natively. Alternatively, it is possible to preprocess the data, for instance by using an imputer transformer in a pipeline or drop samples with missing values. See https://scikit-learn.org/stable/modules/impute.html You can find a list of all estimators that handle NaN values at the following page: https://scikit-learn.org/stable/modules/impute.html#estimators-that-handle-nan-values
2025-05-20 02:13:54,716 - INFO - 1646314554.py:57 - Entrenando y evaluando modelo: XGBoost en S6_MCA_NumPCA.
2025-05-20 02:13:54,793 - INFO - 3824620224.py:34 - Evaluación para XGBoost en S6_MCA_NumPCA: RMSE=0.5453, R2=0.7556
2025-05-20 02:13:54,795 - INFO - 1646314554.py:97 - Bucle de entrenamiento y evaluación completado.
2025-05-20 02:14:36,411 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:14:36,414 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:14:36,442 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:14:36,449 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:14:36,452 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:14:36,473 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:14:36,475 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:14:36,477 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:14:36,480 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:14:36,481 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:14:36,482 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:14:36,490 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:14:36,493 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:14:36,493 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:14:36,494 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:14:36,510 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:14:36,511 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:14:36,512 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:14:36,512 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:14:36,518 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,529 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,530 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:14:36,539 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,552 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:14:36,553 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:14:36,553 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:14:36,562 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:36,563 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:14:36,570 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:36,571 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:14:36,579 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:14:36,580 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:14:36,592 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:14:36,601 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:14:36,601 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:14:36,602 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:14:36,609 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,609 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:14:36,618 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,619 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:14:36,627 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:36,628 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:14:36,635 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:14:36,635 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:14:36,648 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:14:36,669 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:14:36,669 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:14:36,670 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:14:36,671 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:14:36,682 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:36,684 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:14:36,699 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:36,700 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:14:36,711 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:14:36,713 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:14:36,726 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:14:36,736 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:14:36,736 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:14:36,737 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:14:36,737 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:14:36,748 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:14:36,749 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:14:36,758 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:14:40,907 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:14:40,908 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:14:40,919 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:14:40,922 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:14:40,923 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:14:40,932 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:14:40,934 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:14:40,934 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:14:40,936 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:14:40,936 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:14:40,937 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:14:40,945 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:14:40,947 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:14:40,948 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:14:40,948 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:14:40,955 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:14:40,957 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:14:40,958 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:14:40,958 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:14:40,966 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:40,973 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:40,974 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:14:40,981 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:40,993 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:14:40,994 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:14:40,995 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:14:41,009 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:41,013 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:14:41,040 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:41,043 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:14:41,050 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:14:41,051 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:14:41,069 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:14:41,080 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:14:41,080 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:14:41,081 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:14:41,088 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:41,089 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:14:41,096 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:41,097 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:14:41,104 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:14:41,105 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:14:41,112 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:14:41,113 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:14:41,121 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:14:41,134 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:14:41,134 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:14:41,135 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:14:41,135 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:14:41,142 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:41,143 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:14:41,150 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:14:41,151 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:14:41,159 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:14:41,160 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:14:41,167 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:14:41,177 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:14:41,178 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:14:41,178 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:14:41,179 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:14:41,203 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:14:41,204 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:14:41,214 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:17:16,392 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:17:16,393 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:17:16,432 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:17:16,435 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:17:16,436 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:17:16,443 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:17:16,445 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:17:16,446 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:17:16,447 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:17:16,449 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:17:16,449 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:17:16,456 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:17:16,464 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:17:16,465 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:17:16,468 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:17:16,493 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:17:16,495 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:17:16,497 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:17:16,499 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:17:16,514 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,522 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,523 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:17:16,540 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,553 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:17:16,554 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:17:16,554 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:17:16,561 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:17:16,563 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:17:16,570 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:17:16,571 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:17:16,579 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:17:16,580 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:17:16,591 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:17:16,603 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:17:16,604 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:17:16,604 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:17:16,612 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,613 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:17:16,621 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,622 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:17:16,630 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:17:16,631 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:17:16,639 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:17:16,640 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:17:16,649 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:17:16,664 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:17:16,665 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:17:16,665 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:17:16,666 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:17:16,673 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:17:16,674 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:17:16,684 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:17:16,685 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:17:16,693 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:17:16,696 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:17:16,705 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:17:16,719 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:17:16,719 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:17:16,720 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:17:16,720 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:17:16,728 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:17:16,730 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:17:16,739 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:17:16,753 - INFO - 4028758785.py:14 - Iniciando Fase 5: Entrenamiento y Evaluación de modelos en todos los escenarios de preprocesamiento.
2025-05-20 02:17:16,754 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:17:16,754 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S1_RegionOHE_YearNum
2025-05-20 02:17:16,761 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, MAE=0.4173, R2=0.7516
2025-05-20 02:17:16,762 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S1_RegionOHE_YearNum evaluado. RMSE: 0.5497
2025-05-20 02:17:16,763 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S1_RegionOHE_YearNum
2025-05-20 02:17:16,769 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5390, MAE=0.4106, R2=0.7612
2025-05-20 02:17:16,770 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S1_RegionOHE_YearNum evaluado. RMSE: 0.5390
2025-05-20 02:17:16,770 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:17:16,776 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S1_RegionOHE_YearNum: RMSE=0.5106, MAE=0.3762, R2=0.7856
2025-05-20 02:17:16,780 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5106
2025-05-20 02:17:16,780 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:17:16,956 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S1_RegionOHE_YearNum: RMSE=0.4609, MAE=0.3503, R2=0.8254
2025-05-20 02:17:16,956 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4609
2025-05-20 02:17:16,957 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:17:17,101 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S1_RegionOHE_YearNum: RMSE=0.4688, MAE=0.3517, R2=0.8193
2025-05-20 02:17:17,102 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4688
2025-05-20 02:17:17,102 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:17:17,290 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S1_RegionOHE_YearNum: RMSE=0.5077, MAE=0.3871, R2=0.7881
2025-05-20 02:17:17,291 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5077
2025-05-20 02:17:17,291 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:17:17,292 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,297 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, MAE=0.3989, R2=0.7645
2025-05-20 02:17:17,298 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5352
2025-05-20 02:17:17,298 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,302 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5348, MAE=0.3998, R2=0.7649
2025-05-20 02:17:17,303 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5348
2025-05-20 02:17:17,303 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,310 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5283, MAE=0.3871, R2=0.7706
2025-05-20 02:17:17,312 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5283
2025-05-20 02:17:17,313 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,461 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4641, MAE=0.3534, R2=0.8229
2025-05-20 02:17:17,462 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4641
2025-05-20 02:17:17,463 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,601 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4705, MAE=0.3492, R2=0.8180
2025-05-20 02:17:17,602 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4705
2025-05-20 02:17:17,602 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:17:17,683 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5286, MAE=0.4013, R2=0.7703
2025-05-20 02:17:17,687 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5286
2025-05-20 02:17:17,691 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:17:17,692 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:17,698 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, MAE=0.4254, R2=0.7376
2025-05-20 02:17:17,699 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5650
2025-05-20 02:17:17,699 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:17,706 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.5525, MAE=0.4193, R2=0.7490
2025-05-20 02:17:17,706 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5525
2025-05-20 02:17:17,707 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:17,713 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, MAE=0.3840, R2=0.7783
2025-05-20 02:17:17,714 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5193
2025-05-20 02:17:17,714 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:17,881 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, MAE=0.3363, R2=0.8295
2025-05-20 02:17:17,882 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4554
2025-05-20 02:17:17,883 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:18,008 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, MAE=0.3593, R2=0.8191
2025-05-20 02:17:18,008 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4691
2025-05-20 02:17:18,009 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:17:18,088 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5051, MAE=0.3727, R2=0.7902
2025-05-20 02:17:18,088 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5051
2025-05-20 02:17:18,089 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:17:18,089 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,093 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, MAE=0.4036, R2=0.7559
2025-05-20 02:17:18,093 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5449
2025-05-20 02:17:18,094 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,099 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.5467, MAE=0.4033, R2=0.7543
2025-05-20 02:17:18,100 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5467
2025-05-20 02:17:18,100 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,105 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, MAE=0.3973, R2=0.7662
2025-05-20 02:17:18,105 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5333
2025-05-20 02:17:18,106 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,243 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, MAE=0.3331, R2=0.8322
2025-05-20 02:17:18,244 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4518
2025-05-20 02:17:18,244 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,373 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, MAE=0.3599, R2=0.8166
2025-05-20 02:17:18,373 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4723
2025-05-20 02:17:18,374 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:17:18,457 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4849, MAE=0.3626, R2=0.8067
2025-05-20 02:17:18,457 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4849
2025-05-20 02:17:18,458 - INFO - 4028758785.py:87 - Fase 5 completada: todos los modelos y escenarios probados (o intentados).
2025-05-20 02:19:22,537 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:19:22,539 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:19:22,562 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:19:22,566 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:19:22,572 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:19:22,594 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:19:22,599 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:19:22,600 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:19:22,602 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:19:22,605 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:19:22,607 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:19:22,622 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:19:22,625 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:19:22,626 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:19:22,626 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:19:22,641 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:19:22,643 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:19:22,644 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:19:22,644 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:19:22,650 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,660 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,661 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:19:22,676 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,689 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:19:22,690 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:19:22,690 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:19:22,697 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:19:22,698 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:19:22,706 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:19:22,707 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:19:22,714 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:19:22,715 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:19:22,727 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:19:22,736 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:19:22,736 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:19:22,736 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:19:22,746 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,747 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:19:22,755 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,756 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:19:22,763 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:19:22,764 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:19:22,771 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:19:22,773 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:19:22,782 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:19:22,797 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:19:22,798 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:19:22,798 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:19:22,799 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:19:22,807 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:19:22,808 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:19:22,815 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:19:22,816 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:19:22,824 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:19:22,825 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:19:22,834 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:19:22,846 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:19:22,846 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:19:22,846 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:19:22,847 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:19:22,855 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:19:22,857 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:19:22,867 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:19:22,881 - INFO - 4028758785.py:14 - Iniciando Fase 5: Entrenamiento y Evaluación de modelos en todos los escenarios de preprocesamiento.
2025-05-20 02:19:22,881 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:19:22,882 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S1_RegionOHE_YearNum
2025-05-20 02:19:22,886 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, MAE=0.4173, R2=0.7516
2025-05-20 02:19:22,887 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S1_RegionOHE_YearNum evaluado. RMSE: 0.5497
2025-05-20 02:19:22,888 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S1_RegionOHE_YearNum
2025-05-20 02:19:22,894 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5390, MAE=0.4106, R2=0.7612
2025-05-20 02:19:22,895 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S1_RegionOHE_YearNum evaluado. RMSE: 0.5390
2025-05-20 02:19:22,895 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:19:22,899 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S1_RegionOHE_YearNum: RMSE=0.5106, MAE=0.3762, R2=0.7856
2025-05-20 02:19:22,899 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5106
2025-05-20 02:19:22,900 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:19:23,042 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S1_RegionOHE_YearNum: RMSE=0.4609, MAE=0.3503, R2=0.8254
2025-05-20 02:19:23,048 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4609
2025-05-20 02:19:23,049 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:19:23,201 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S1_RegionOHE_YearNum: RMSE=0.4688, MAE=0.3517, R2=0.8193
2025-05-20 02:19:23,201 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4688
2025-05-20 02:19:23,202 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:19:23,284 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S1_RegionOHE_YearNum: RMSE=0.5077, MAE=0.3871, R2=0.7881
2025-05-20 02:19:23,287 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5077
2025-05-20 02:19:23,288 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:19:23,289 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,296 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, MAE=0.3989, R2=0.7645
2025-05-20 02:19:23,296 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5352
2025-05-20 02:19:23,297 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,302 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5348, MAE=0.3998, R2=0.7649
2025-05-20 02:19:23,303 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5348
2025-05-20 02:19:23,303 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,308 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5283, MAE=0.3871, R2=0.7706
2025-05-20 02:19:23,309 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5283
2025-05-20 02:19:23,310 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,517 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4641, MAE=0.3534, R2=0.8229
2025-05-20 02:19:23,518 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4641
2025-05-20 02:19:23,518 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,655 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4705, MAE=0.3492, R2=0.8180
2025-05-20 02:19:23,656 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4705
2025-05-20 02:19:23,656 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:19:23,701 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5286, MAE=0.4013, R2=0.7703
2025-05-20 02:19:23,701 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5286
2025-05-20 02:19:23,702 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:19:23,702 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:23,706 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, MAE=0.4254, R2=0.7376
2025-05-20 02:19:23,707 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5650
2025-05-20 02:19:23,707 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:23,711 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.5525, MAE=0.4193, R2=0.7490
2025-05-20 02:19:23,712 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5525
2025-05-20 02:19:23,712 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:23,717 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, MAE=0.3840, R2=0.7783
2025-05-20 02:19:23,718 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5193
2025-05-20 02:19:23,718 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:23,841 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, MAE=0.3363, R2=0.8295
2025-05-20 02:19:23,842 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4554
2025-05-20 02:19:23,842 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:23,966 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, MAE=0.3593, R2=0.8191
2025-05-20 02:19:23,966 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4691
2025-05-20 02:19:23,967 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:19:24,037 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5051, MAE=0.3727, R2=0.7902
2025-05-20 02:19:24,040 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5051
2025-05-20 02:19:24,041 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:19:24,041 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,045 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, MAE=0.4036, R2=0.7559
2025-05-20 02:19:24,046 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5449
2025-05-20 02:19:24,046 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,050 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.5467, MAE=0.4033, R2=0.7543
2025-05-20 02:19:24,050 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5467
2025-05-20 02:19:24,050 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,053 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, MAE=0.3973, R2=0.7662
2025-05-20 02:19:24,054 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5333
2025-05-20 02:19:24,055 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,172 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, MAE=0.3331, R2=0.8322
2025-05-20 02:19:24,173 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4518
2025-05-20 02:19:24,173 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,298 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, MAE=0.3599, R2=0.8166
2025-05-20 02:19:24,299 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4723
2025-05-20 02:19:24,299 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:19:24,493 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4849, MAE=0.3626, R2=0.8067
2025-05-20 02:19:24,493 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4849
2025-05-20 02:19:24,494 - INFO - 4028758785.py:87 - Fase 5 completada: todos los modelos y escenarios probados (o intentados).
2025-05-20 02:19:24,510 - INFO - 3017658063.py:5 - Iniciando Fase 6: Análisis de resultados y selección de mejores modelos.
2025-05-20 02:19:24,511 - INFO - 3017658063.py:6 - Se obtuvieron 24 resultados de experimentos.
2025-05-20 02:19:24,512 - INFO - 3017658063.py:10 - Resultados de los experimentos convertidos a DataFrame.
2025-05-20 02:19:24,517 - INFO - 3017658063.py:26 - Resultados ordenados por RMSE (ascendente).
2025-05-20 02:19:24,721 - INFO - 3017658063.py:54 - Gráfico de barras comparando el RMSE de los top 10 modelos/escenarios generado.
2025-05-20 02:19:24,919 - INFO - 3017658063.py:72 - Gráfico de barras comparando el R2 Score de los top 10 modelos/escenarios generado.
2025-05-20 02:28:19,318 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:28:19,319 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:28:19,327 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:28:19,331 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:28:19,331 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:28:19,343 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:28:19,344 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:28:19,344 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:28:19,345 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:28:19,346 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:28:19,347 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:28:19,355 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:28:19,358 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:28:19,358 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:28:19,359 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:28:19,366 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:28:19,367 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:28:19,367 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:28:19,368 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:28:19,375 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,383 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,384 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:28:19,392 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,411 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:28:19,412 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:28:19,412 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:28:19,432 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:19,433 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:28:19,452 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:19,453 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:28:19,460 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:28:19,461 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:28:19,479 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:28:19,489 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:28:19,490 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:28:19,490 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:28:19,498 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,499 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:28:19,507 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,508 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:28:19,520 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:19,521 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:28:19,529 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:28:19,529 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:28:19,538 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:28:19,552 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:28:19,552 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:28:19,553 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:28:19,553 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:28:19,561 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:19,561 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:28:19,569 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:19,570 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:28:19,578 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:28:19,579 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:28:19,588 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:28:19,598 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:28:19,598 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:28:19,598 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:28:19,599 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:28:19,607 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:28:19,608 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:28:19,617 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:28:19,631 - INFO - 4028758785.py:14 - Iniciando Fase 5: Entrenamiento y Evaluación de modelos en todos los escenarios de preprocesamiento.
2025-05-20 02:28:19,632 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:28:19,632 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S1_RegionOHE_YearNum
2025-05-20 02:28:19,637 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, MAE=0.4173, R2=0.7516
2025-05-20 02:28:19,637 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S1_RegionOHE_YearNum evaluado. RMSE: 0.5497
2025-05-20 02:28:19,638 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S1_RegionOHE_YearNum
2025-05-20 02:28:19,641 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5390, MAE=0.4106, R2=0.7612
2025-05-20 02:28:19,642 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S1_RegionOHE_YearNum evaluado. RMSE: 0.5390
2025-05-20 02:28:19,642 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:19,646 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S1_RegionOHE_YearNum: RMSE=0.5106, MAE=0.3762, R2=0.7856
2025-05-20 02:28:19,646 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5106
2025-05-20 02:28:19,647 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:19,780 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S1_RegionOHE_YearNum: RMSE=0.4609, MAE=0.3503, R2=0.8254
2025-05-20 02:28:19,781 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4609
2025-05-20 02:28:19,781 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:19,925 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S1_RegionOHE_YearNum: RMSE=0.4688, MAE=0.3517, R2=0.8193
2025-05-20 02:28:19,926 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4688
2025-05-20 02:28:19,927 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:20,043 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S1_RegionOHE_YearNum: RMSE=0.5077, MAE=0.3871, R2=0.7881
2025-05-20 02:28:20,044 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5077
2025-05-20 02:28:20,045 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:28:20,046 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,050 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, MAE=0.3989, R2=0.7645
2025-05-20 02:28:20,051 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5352
2025-05-20 02:28:20,051 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,055 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5348, MAE=0.3998, R2=0.7649
2025-05-20 02:28:20,055 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5348
2025-05-20 02:28:20,056 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,060 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5283, MAE=0.3871, R2=0.7706
2025-05-20 02:28:20,061 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5283
2025-05-20 02:28:20,062 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,211 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4641, MAE=0.3534, R2=0.8229
2025-05-20 02:28:20,211 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4641
2025-05-20 02:28:20,211 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,348 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4705, MAE=0.3492, R2=0.8180
2025-05-20 02:28:20,349 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4705
2025-05-20 02:28:20,350 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:20,401 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5286, MAE=0.4013, R2=0.7703
2025-05-20 02:28:20,404 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5286
2025-05-20 02:28:20,404 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:28:20,404 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,409 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, MAE=0.4254, R2=0.7376
2025-05-20 02:28:20,410 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5650
2025-05-20 02:28:20,410 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,414 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.5525, MAE=0.4193, R2=0.7490
2025-05-20 02:28:20,414 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5525
2025-05-20 02:28:20,415 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,419 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, MAE=0.3840, R2=0.7783
2025-05-20 02:28:20,420 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5193
2025-05-20 02:28:20,420 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,538 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, MAE=0.3363, R2=0.8295
2025-05-20 02:28:20,538 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4554
2025-05-20 02:28:20,539 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,657 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, MAE=0.3593, R2=0.8191
2025-05-20 02:28:20,658 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4691
2025-05-20 02:28:20,658 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:20,722 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5051, MAE=0.3727, R2=0.7902
2025-05-20 02:28:20,724 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5051
2025-05-20 02:28:20,724 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:28:20,724 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:20,728 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, MAE=0.4036, R2=0.7559
2025-05-20 02:28:20,728 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5449
2025-05-20 02:28:20,729 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:20,732 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.5467, MAE=0.4033, R2=0.7543
2025-05-20 02:28:20,733 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5467
2025-05-20 02:28:20,733 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:20,738 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, MAE=0.3973, R2=0.7662
2025-05-20 02:28:20,739 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5333
2025-05-20 02:28:20,740 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:20,870 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, MAE=0.3331, R2=0.8322
2025-05-20 02:28:20,871 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4518
2025-05-20 02:28:20,871 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:20,992 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, MAE=0.3599, R2=0.8166
2025-05-20 02:28:20,992 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4723
2025-05-20 02:28:20,993 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:21,080 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4849, MAE=0.3626, R2=0.8067
2025-05-20 02:28:21,081 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4849
2025-05-20 02:28:21,081 - INFO - 4028758785.py:87 - Fase 5 completada: todos los modelos y escenarios probados (o intentados).
2025-05-20 02:28:21,100 - INFO - 3017658063.py:5 - Iniciando Fase 6: Análisis de resultados y selección de mejores modelos.
2025-05-20 02:28:21,100 - INFO - 3017658063.py:6 - Se obtuvieron 24 resultados de experimentos.
2025-05-20 02:28:21,101 - INFO - 3017658063.py:10 - Resultados de los experimentos convertidos a DataFrame.
2025-05-20 02:28:21,104 - INFO - 3017658063.py:26 - Resultados ordenados por RMSE (ascendente).
2025-05-20 02:28:21,287 - INFO - 3017658063.py:54 - Gráfico de barras comparando el RMSE de los top 10 modelos/escenarios generado.
2025-05-20 02:28:21,544 - INFO - 3017658063.py:72 - Gráfico de barras comparando el R2 Score de los top 10 modelos/escenarios generado.
2025-05-20 02:28:21,556 - INFO - 3348725648.py:19 - Iniciando Fase 7: Optimización de Hiperparámetros.
2025-05-20 02:28:21,557 - INFO - 3348725648.py:33 - Rejilla de parámetros para RandomForest: {'regressor__n_estimators': [100, 200, 300], 'regressor__max_depth': [None, 10, 20, 30], 'regressor__min_samples_split': [2, 5, 10], 'regressor__min_samples_leaf': [1, 2, 4]}
2025-05-20 02:28:21,557 - INFO - 3348725648.py:41 - Rejilla de parámetros para GradientBoosting: {'regressor__n_estimators': [100, 200, 300], 'regressor__learning_rate': [0.01, 0.05, 0.1], 'regressor__max_depth': [3, 5, 7], 'regressor__subsample': [0.7, 0.8, 1.0]}
2025-05-20 02:28:21,558 - INFO - 3348725648.py:51 - Rejilla de parámetros para XGBoost: {'regressor__n_estimators': [100, 200, 300], 'regressor__learning_rate': [0.01, 0.05, 0.1], 'regressor__max_depth': [3, 5, 7], 'regressor__subsample': [0.7, 0.8, 1.0], 'regressor__colsample_bytree': [0.7, 0.8, 1.0]}
2025-05-20 02:28:21,558 - INFO - 3348725648.py:62 - Configuración de GridSearchCV: cv_folds=KFold(n_splits=5, random_state=42, shuffle=True), scoring='neg_root_mean_squared_error'.
2025-05-20 02:28:21,559 - INFO - 3348725648.py:98 - Configuraciones seleccionadas para optimización: ['RandomForest_S4', 'GradientBoosting_S1', 'XGBoost_S4']
2025-05-20 02:28:49,079 - INFO - 4084062642.py:36 - Librerías importadas y logging configurado.
2025-05-20 02:28:49,081 - INFO - 4084062642.py:44 - Configuraciones de Pandas y Seaborn aplicadas.
2025-05-20 02:28:49,094 - INFO - 2141673523.py:7 - Ruta del dataset unificado a cargar: /home/nicolas/Escritorio/workshops ETL/workshop_3/data/processed/happiness_unified_dataset.csv
2025-05-20 02:28:49,097 - INFO - 2141673523.py:12 - Dataset unificado 'happiness_unified_dataset.csv' cargado exitosamente.
2025-05-20 02:28:49,097 - INFO - 2141673523.py:14 - Dimensiones del DataFrame unificado: (782, 11)
2025-05-20 02:28:49,105 - INFO - 2037522046.py:3 - Iniciando la definición de features (X) y el target (y).
2025-05-20 02:28:49,106 - INFO - 2037522046.py:9 - Variable target (y) definida como la columna: 'happiness_score'.
2025-05-20 02:28:49,107 - INFO - 2037522046.py:10 - Dimensiones del target (y): (782,)
2025-05-20 02:28:49,108 - INFO - 2037522046.py:16 - Features (X) definidas excluyendo las columnas: ['happiness_score', 'country', 'happiness_rank'].
2025-05-20 02:28:49,108 - INFO - 2037522046.py:17 - Columnas seleccionadas como features para X: ['year', 'region', 'social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:28:49,109 - INFO - 2037522046.py:18 - Dimensiones de las features (X): (782, 8)
2025-05-20 02:28:49,116 - INFO - 2765091689.py:3 - Iniciando la división de datos en conjuntos de entrenamiento y prueba.
2025-05-20 02:28:49,118 - INFO - 2765091689.py:8 - Datos divididos exitosamente.
2025-05-20 02:28:49,119 - INFO - 2765091689.py:9 - Dimensiones de X_train: (625, 8), y_train: (625,)
2025-05-20 02:28:49,119 - INFO - 2765091689.py:10 - Dimensiones de X_test: (157, 8), y_test: (157,)
2025-05-20 02:28:49,128 - INFO - 259128273.py:4 - Identificando tipos de columnas en X_train para el preprocesamiento.
2025-05-20 02:28:49,129 - INFO - 259128273.py:12 - Columnas numéricas identificadas (excluyendo 'year' temporalmente): ['social_support', 'health_life_expectancy', 'generosity', 'freedom_to_make_life_choices', 'economy_gdp_per_capita', 'perceptions_of_corruption']
2025-05-20 02:28:49,129 - INFO - 259128273.py:31 - Columnas categóricas nominales identificadas (para OHE): ['region']
2025-05-20 02:28:49,130 - INFO - 259128273.py:39 - Columna 'year' identificada para tratamiento especial: ['year']
2025-05-20 02:28:49,136 - INFO - 3283550905.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,145 - INFO - 2785867085.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,146 - INFO - 2785867085.py:23 - ColumnTransformer para Escenario 1 definido.
2025-05-20 02:28:49,155 - INFO - 3759520940.py:3 - Configurando Preprocesador para Escenario 1: 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,189 - INFO - 3759520940.py:18 - Preprocesamiento del Escenario 1 completado.
2025-05-20 02:28:49,190 - INFO - 3759520940.py:19 - Forma de X_train_s1: (625, 16)
2025-05-20 02:28:49,192 - INFO - 3759520940.py:20 - Forma de X_test_s1: (157, 16)
2025-05-20 02:28:49,219 - INFO - 949311130.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:49,221 - INFO - 949311130.py:11 - Transformador numérico para Escenario 2 definido (StandardScaler).
2025-05-20 02:28:49,228 - INFO - 4005966931.py:6 - Configurando Preprocesador para Escenario 2: 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:49,228 - INFO - 4005966931.py:21 - Transformador categórico para Escenario 2 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:28:49,245 - INFO - 1419612559.py:7 - Creando ColumnTransformer para Escenario 2.
2025-05-20 02:28:49,246 - INFO - 1419612559.py:25 - ColumnTransformer para Escenario 2 definido.
2025-05-20 02:28:49,258 - INFO - 3611365765.py:8 - Aplicando preprocesador del Escenario 2 a X_train y X_test.
2025-05-20 02:28:49,267 - INFO - 3611365765.py:18 - Preprocesamiento del Escenario 2 completado.
2025-05-20 02:28:49,268 - INFO - 3611365765.py:19 - Forma de X_train_s2: (625, 19)
2025-05-20 02:28:49,268 - INFO - 3611365765.py:20 - Forma de X_test_s2: (157, 19)
2025-05-20 02:28:49,275 - INFO - 2773892961.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,276 - INFO - 2773892961.py:12 - Transformador numérico para Escenario 3 definido (StandardScaler + PCA).
2025-05-20 02:28:49,284 - INFO - 1397364820.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,285 - INFO - 1397364820.py:15 - Transformador categórico para 'region' en Escenario 3 definido (OneHotEncoder para ['region']).
2025-05-20 02:28:49,299 - INFO - 2419073420.py:6 - Configurando Preprocesador para Escenario 3: PCA en numéricas, 'region' (OHE), 'year' (Numérica Escalada).
2025-05-20 02:28:49,299 - INFO - 2419073420.py:15 - Transformador numérico para 'year' en Escenario 3 definido (StandardScaler para ['year']).
2025-05-20 02:28:49,312 - INFO - 1889344899.py:8 - Creando ColumnTransformer para Escenario 3.
2025-05-20 02:28:49,313 - INFO - 1889344899.py:29 - ColumnTransformer para Escenario 3 definido.
2025-05-20 02:28:49,321 - INFO - 4268175627.py:8 - Aplicando preprocesador del Escenario 3 a X_train y X_test.
2025-05-20 02:28:49,334 - INFO - 4268175627.py:17 - Preprocesamiento del Escenario 3 completado.
2025-05-20 02:28:49,335 - INFO - 4268175627.py:18 - Forma de X_train_s3: (625, 15)
2025-05-20 02:28:49,335 - INFO - 4268175627.py:19 - Forma de X_test_s3: (157, 15)
2025-05-20 02:28:49,336 - INFO - 4268175627.py:22 - Número de componentes PCA retenidos en Escenario 3: 5
2025-05-20 02:28:49,344 - INFO - 1632900998.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:49,345 - INFO - 1632900998.py:16 - Transformador numérico para Escenario 4 definido (StandardScaler + PCA).
2025-05-20 02:28:49,353 - INFO - 547323024.py:6 - Configurando Preprocesador para Escenario 4: PCA en numéricas, 'region' (OHE), 'year' (OHE).
2025-05-20 02:28:49,354 - INFO - 547323024.py:21 - Transformador categórico para Escenario 4 definido (OneHotEncoder para ['region', 'year']).
2025-05-20 02:28:49,362 - INFO - 569666214.py:8 - Creando ColumnTransformer para Escenario 4.
2025-05-20 02:28:49,363 - INFO - 569666214.py:26 - ColumnTransformer para Escenario 4 definido.
2025-05-20 02:28:49,372 - INFO - 736996988.py:8 - Aplicando preprocesador del Escenario 4 a X_train y X_test.
2025-05-20 02:28:49,382 - INFO - 736996988.py:17 - Preprocesamiento del Escenario 4 completado.
2025-05-20 02:28:49,382 - INFO - 736996988.py:18 - Forma de X_train_s4: (625, 18)
2025-05-20 02:28:49,383 - INFO - 736996988.py:19 - Forma de X_test_s4: (157, 18)
2025-05-20 02:28:49,383 - INFO - 736996988.py:21 - Número de componentes PCA retenidos en Escenario 4: 5
2025-05-20 02:28:49,393 - INFO - 1735398738.py:9 - Definiendo la lista de modelos de regresión a probar.
2025-05-20 02:28:49,394 - INFO - 1735398738.py:28 - Modelos a probar definidos: ['LinearReg_Ridge', 'LinearReg_Lasso', 'KNN_Regressor', 'RandomForest_Regressor', 'GradientBoosting_Regressor', 'XGBoost_Regressor']
2025-05-20 02:28:49,404 - INFO - 4096111573.py:35 - Función 'evaluate_regression_model' definida.
2025-05-20 02:28:49,417 - INFO - 4028758785.py:14 - Iniciando Fase 5: Entrenamiento y Evaluación de modelos en todos los escenarios de preprocesamiento.
2025-05-20 02:28:49,418 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S1_RegionOHE_YearNum ---
2025-05-20 02:28:49,419 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S1_RegionOHE_YearNum
2025-05-20 02:28:49,424 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S1_RegionOHE_YearNum: RMSE=0.5497, MAE=0.4173, R2=0.7516
2025-05-20 02:28:49,424 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S1_RegionOHE_YearNum evaluado. RMSE: 0.5497
2025-05-20 02:28:49,425 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S1_RegionOHE_YearNum
2025-05-20 02:28:49,428 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S1_RegionOHE_YearNum: RMSE=0.5390, MAE=0.4106, R2=0.7612
2025-05-20 02:28:49,429 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S1_RegionOHE_YearNum evaluado. RMSE: 0.5390
2025-05-20 02:28:49,429 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:49,432 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S1_RegionOHE_YearNum: RMSE=0.5106, MAE=0.3762, R2=0.7856
2025-05-20 02:28:49,433 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5106
2025-05-20 02:28:49,433 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:49,554 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S1_RegionOHE_YearNum: RMSE=0.4609, MAE=0.3503, R2=0.8254
2025-05-20 02:28:49,555 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4609
2025-05-20 02:28:49,555 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:49,686 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S1_RegionOHE_YearNum: RMSE=0.4688, MAE=0.3517, R2=0.8193
2025-05-20 02:28:49,687 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.4688
2025-05-20 02:28:49,687 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S1_RegionOHE_YearNum
2025-05-20 02:28:49,747 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S1_RegionOHE_YearNum: RMSE=0.5077, MAE=0.3871, R2=0.7881
2025-05-20 02:28:49,749 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S1_RegionOHE_YearNum evaluado. RMSE: 0.5077
2025-05-20 02:28:49,750 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S2_RegionOHE_YearOHE ---
2025-05-20 02:28:49,750 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S2_RegionOHE_YearOHE
2025-05-20 02:28:49,760 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S2_RegionOHE_YearOHE: RMSE=0.5352, MAE=0.3989, R2=0.7645
2025-05-20 02:28:49,760 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5352
2025-05-20 02:28:49,761 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S2_RegionOHE_YearOHE
2025-05-20 02:28:49,765 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S2_RegionOHE_YearOHE: RMSE=0.5348, MAE=0.3998, R2=0.7649
2025-05-20 02:28:49,765 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5348
2025-05-20 02:28:49,765 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:49,769 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5283, MAE=0.3871, R2=0.7706
2025-05-20 02:28:49,770 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5283
2025-05-20 02:28:49,770 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:49,913 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4641, MAE=0.3534, R2=0.8229
2025-05-20 02:28:49,913 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4641
2025-05-20 02:28:49,914 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:50,056 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S2_RegionOHE_YearOHE: RMSE=0.4705, MAE=0.3492, R2=0.8180
2025-05-20 02:28:50,057 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.4705
2025-05-20 02:28:50,057 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S2_RegionOHE_YearOHE
2025-05-20 02:28:50,159 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S2_RegionOHE_YearOHE: RMSE=0.5286, MAE=0.4013, R2=0.7703
2025-05-20 02:28:50,160 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S2_RegionOHE_YearOHE evaluado. RMSE: 0.5286
2025-05-20 02:28:50,160 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S3_PCA_RegionOHE_YearNum ---
2025-05-20 02:28:50,161 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,165 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S3_PCA_RegionOHE_YearNum: RMSE=0.5650, MAE=0.4254, R2=0.7376
2025-05-20 02:28:50,166 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5650
2025-05-20 02:28:50,167 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,172 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S3_PCA_RegionOHE_YearNum: RMSE=0.5525, MAE=0.4193, R2=0.7490
2025-05-20 02:28:50,172 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5525
2025-05-20 02:28:50,173 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,178 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5193, MAE=0.3840, R2=0.7783
2025-05-20 02:28:50,179 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5193
2025-05-20 02:28:50,179 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,302 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4554, MAE=0.3363, R2=0.8295
2025-05-20 02:28:50,303 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4554
2025-05-20 02:28:50,303 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,435 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.4691, MAE=0.3593, R2=0.8191
2025-05-20 02:28:50,435 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.4691
2025-05-20 02:28:50,436 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S3_PCA_RegionOHE_YearNum
2025-05-20 02:28:50,510 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S3_PCA_RegionOHE_YearNum: RMSE=0.5051, MAE=0.3727, R2=0.7902
2025-05-20 02:28:50,511 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S3_PCA_RegionOHE_YearNum evaluado. RMSE: 0.5051
2025-05-20 02:28:50,512 - INFO - 4028758785.py:41 - --- Iniciando pruebas para el Escenario: S4_PCA_RegionOHE_YearOHE ---
2025-05-20 02:28:50,512 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,516 - INFO - 4096111573.py:26 - Métricas para LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE: RMSE=0.5449, MAE=0.4036, R2=0.7559
2025-05-20 02:28:50,517 - INFO - 4028758785.py:73 - Modelo LinearReg_Ridge en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5449
2025-05-20 02:28:50,518 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,522 - INFO - 4096111573.py:26 - Métricas para LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE: RMSE=0.5467, MAE=0.4033, R2=0.7543
2025-05-20 02:28:50,523 - INFO - 4028758785.py:73 - Modelo LinearReg_Lasso en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5467
2025-05-20 02:28:50,525 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: KNN_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,529 - INFO - 4096111573.py:26 - Métricas para KNN_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.5333, MAE=0.3973, R2=0.7662
2025-05-20 02:28:50,529 - INFO - 4028758785.py:73 - Modelo KNN_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.5333
2025-05-20 02:28:50,530 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,670 - INFO - 4096111573.py:26 - Métricas para RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4518, MAE=0.3331, R2=0.8322
2025-05-20 02:28:50,671 - INFO - 4028758785.py:73 - Modelo RandomForest_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4518
2025-05-20 02:28:50,671 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,797 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4723, MAE=0.3599, R2=0.8166
2025-05-20 02:28:50,798 - INFO - 4028758785.py:73 - Modelo GradientBoosting_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4723
2025-05-20 02:28:50,798 - INFO - 4028758785.py:47 - Entrenando y evaluando el modelo: XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE
2025-05-20 02:28:50,915 - INFO - 4096111573.py:26 - Métricas para XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE: RMSE=0.4849, MAE=0.3626, R2=0.8067
2025-05-20 02:28:50,918 - INFO - 4028758785.py:73 - Modelo XGBoost_Regressor en S4_PCA_RegionOHE_YearOHE evaluado. RMSE: 0.4849
2025-05-20 02:28:50,919 - INFO - 4028758785.py:87 - Fase 5 completada: todos los modelos y escenarios probados (o intentados).
2025-05-20 02:28:50,935 - INFO - 3017658063.py:5 - Iniciando Fase 6: Análisis de resultados y selección de mejores modelos.
2025-05-20 02:28:50,936 - INFO - 3017658063.py:6 - Se obtuvieron 24 resultados de experimentos.
2025-05-20 02:28:50,937 - INFO - 3017658063.py:10 - Resultados de los experimentos convertidos a DataFrame.
2025-05-20 02:28:50,941 - INFO - 3017658063.py:26 - Resultados ordenados por RMSE (ascendente).
2025-05-20 02:28:51,121 - INFO - 3017658063.py:54 - Gráfico de barras comparando el RMSE de los top 10 modelos/escenarios generado.
2025-05-20 02:28:51,304 - INFO - 3017658063.py:72 - Gráfico de barras comparando el R2 Score de los top 10 modelos/escenarios generado.
2025-05-20 02:28:51,315 - INFO - 3348725648.py:19 - Iniciando Fase 7: Optimización de Hiperparámetros.
2025-05-20 02:28:51,316 - INFO - 3348725648.py:33 - Rejilla de parámetros para RandomForest: {'regressor__n_estimators': [100, 200, 300], 'regressor__max_depth': [None, 10, 20, 30], 'regressor__min_samples_split': [2, 5, 10], 'regressor__min_samples_leaf': [1, 2, 4]}
2025-05-20 02:28:51,316 - INFO - 3348725648.py:41 - Rejilla de parámetros para GradientBoosting: {'regressor__n_estimators': [100, 200, 300], 'regressor__learning_rate': [0.01, 0.05, 0.1], 'regressor__max_depth': [3, 5, 7], 'regressor__subsample': [0.7, 0.8, 1.0]}
2025-05-20 02:28:51,316 - INFO - 3348725648.py:51 - Rejilla de parámetros para XGBoost: {'regressor__n_estimators': [100, 200, 300], 'regressor__learning_rate': [0.01, 0.05, 0.1], 'regressor__max_depth': [3, 5, 7], 'regressor__subsample': [0.7, 0.8, 1.0], 'regressor__colsample_bytree': [0.7, 0.8, 1.0]}
2025-05-20 02:28:51,317 - INFO - 3348725648.py:62 - Configuración de GridSearchCV: cv_folds=KFold(n_splits=5, random_state=42, shuffle=True), scoring='neg_root_mean_squared_error'.
2025-05-20 02:28:51,318 - INFO - 3348725648.py:98 - Configuraciones seleccionadas para optimización: ['RandomForest_S4', 'GradientBoosting_S1', 'XGBoost_S4']
2025-05-20 02:28:51,332 - INFO - 3610532626.py:7 - Iniciando ejecución de GridSearchCV para las configuraciones seleccionadas.
2025-05-20 02:28:51,333 - INFO - 3610532626.py:15 - --- Optimizando: RandomForest_S4 ---
2025-05-20 02:30:02,132 - INFO - 3610532626.py:97 - Mejores parámetros para RandomForest_S4: {'regressor__max_depth': 30, 'regressor__min_samples_leaf': 1, 'regressor__min_samples_split': 2, 'regressor__n_estimators': 300}
2025-05-20 02:30:02,133 - INFO - 3610532626.py:98 - Mejor score (neg_root_mean_squared_error) de CV para RandomForest_S4: -0.4428
2025-05-20 02:30:02,210 - INFO - 4096111573.py:26 - Métricas para RandomForest_S4_Optimized en S4: RMSE=0.4520, MAE=0.3362, R2=0.8320
2025-05-20 02:30:02,211 - INFO - 3610532626.py:104 - Métricas en Test para RandomForest_S4_Optimized: RMSE=0.4520, R2=0.8320
2025-05-20 02:30:02,212 - INFO - 3610532626.py:15 - --- Optimizando: GradientBoosting_S1 ---
2025-05-20 02:30:44,676 - INFO - 3610532626.py:97 - Mejores parámetros para GradientBoosting_S1: {'regressor__learning_rate': 0.05, 'regressor__max_depth': 5, 'regressor__n_estimators': 200, 'regressor__subsample': 0.7}
2025-05-20 02:30:44,677 - INFO - 3610532626.py:98 - Mejor score (neg_root_mean_squared_error) de CV para GradientBoosting_S1: -0.4247
2025-05-20 02:30:44,687 - INFO - 4096111573.py:26 - Métricas para GradientBoosting_S1_Optimized en S1: RMSE=0.4377, MAE=0.3375, R2=0.8425
2025-05-20 02:30:44,688 - INFO - 3610532626.py:104 - Métricas en Test para GradientBoosting_S1_Optimized: RMSE=0.4377, R2=0.8425
2025-05-20 02:30:44,689 - INFO - 3610532626.py:15 - --- Optimizando: XGBoost_S4 ---
2025-05-20 02:31:30,443 - INFO - 3610532626.py:97 - Mejores parámetros para XGBoost_S4: {'regressor__colsample_bytree': 0.7, 'regressor__learning_rate': 0.05, 'regressor__max_depth': 5, 'regressor__n_estimators': 300, 'regressor__subsample': 0.8}
2025-05-20 02:31:30,444 - INFO - 3610532626.py:98 - Mejor score (neg_root_mean_squared_error) de CV para XGBoost_S4: -0.4323
2025-05-20 02:31:30,456 - INFO - 4096111573.py:26 - Métricas para XGBoost_S4_Optimized en S4: RMSE=0.4421, MAE=0.3300, R2=0.8393
2025-05-20 02:31:30,457 - INFO - 3610532626.py:104 - Métricas en Test para XGBoost_S4_Optimized: RMSE=0.4421, R2=0.8393
2025-05-20 02:31:30,458 - INFO - 3610532626.py:122 - Optimización de hiperparámetros completada para todas las configuraciones seleccionadas.
2025-05-20 02:34:27,016 - INFO - 1139624653.py:27 - Iniciando Fase 8: Análisis profundo del mejor modelo optimizado.
2025-05-20 02:34:27,018 - INFO - 1139624653.py:60 - Analizando el mejor modelo optimizado: GradientBoosting_S1
2025-05-20 02:38:57,489 - INFO - 3048279950.py:16 - Iniciando Fase 8: Análisis profundo del mejor modelo optimizado.
2025-05-20 02:38:57,491 - INFO - 3048279950.py:25 - Seleccionado para análisis profundo: GradientBoosting_S1 con Test RMSE: 0.4377
2025-05-20 02:38:57,492 - INFO - 3048279950.py:67 - Entrenando el pipeline final (GradientBoosting_S1) en todo X_train...
2025-05-20 02:38:57,847 - INFO - 3048279950.py:69 - Pipeline final entrenado.
2025-05-20 02:39:50,766 - INFO - 1940844933.py:6 - Analizando la importancia de features del mejor modelo.
2025-05-20 02:39:50,772 - INFO - 1940844933.py:13 - Obtenidas 'feature_importances_' del modelo.
2025-05-20 02:39:51,104 - INFO - 1940844933.py:40 - Gráfico de importancia de features generado.
2025-05-20 02:40:23,158 - INFO - 2374716597.py:6 - Realizando análisis de residuos del mejor modelo.
2025-05-20 02:40:23,389 - INFO - 2374716597.py:20 - Histograma de residuos generado. Media de residuos: -0.0019, Std de residuos: 0.4390
2025-05-20 02:40:23,480 - INFO - 2374716597.py:33 - Gráfico de dispersión de predicciones vs. residuos generado.
2025-05-20 02:40:49,437 - INFO - 1213935883.py:6 - Generando gráfico de valores predichos vs. valores reales.
2025-05-20 02:40:49,534 - INFO - 1213935883.py:22 - Gráfico de valores predichos vs. reales generado.
2025-05-20 02:48:47,736 - INFO - 1402141137.py:16 - Iniciando Fase 8: Análisis profundo del mejor modelo optimizado.
2025-05-20 02:48:47,738 - INFO - 1402141137.py:25 - Seleccionado para análisis profundo: GradientBoosting_S1 con Test RMSE: 0.4377
2025-05-20 02:48:47,739 - INFO - 1402141137.py:67 - Entrenando el pipeline final (GradientBoosting_S1) en todo X_train...
2025-05-20 02:48:48,046 - INFO - 1402141137.py:69 - Pipeline final entrenado.
2025-05-20 02:48:51,581 - INFO - 1940844933.py:6 - Analizando la importancia de features del mejor modelo.
2025-05-20 02:48:51,583 - INFO - 1940844933.py:13 - Obtenidas 'feature_importances_' del modelo.
2025-05-20 02:48:51,766 - INFO - 1940844933.py:40 - Gráfico de importancia de features generado.
2025-05-20 02:49:41,807 - INFO - 1402141137.py:16 - Iniciando Fase 8: Análisis profundo del mejor modelo optimizado.
2025-05-20 02:49:41,809 - INFO - 1402141137.py:25 - Seleccionado para análisis profundo: GradientBoosting_S1 con Test RMSE: 0.4377
2025-05-20 02:49:41,809 - INFO - 1402141137.py:67 - Entrenando el pipeline final (GradientBoosting_S1) en todo X_train...
2025-05-20 02:49:42,128 - INFO - 1402141137.py:69 - Pipeline final entrenado.
2025-05-20 02:49:45,188 - INFO - 3286071790.py:6 - Analizando la importancia de features del mejor modelo.
2025-05-20 02:49:45,191 - INFO - 3286071790.py:13 - Obtenidas 'feature_importances_' del modelo.
2025-05-20 02:49:45,510 - INFO - 3286071790.py:40 - Gráfico de importancia de features generado.
2025-05-20 02:57:40,131 - INFO - 2736759513.py:11 - Iniciando el guardado del mejor modelo pipeline: GradientBoosting_S1
2025-05-20 02:57:40,132 - INFO - 2736759513.py:19 - Directorio de modelos '/home/nicolas/Escritorio/workshops ETL/workshop_3/models' asegurado/creado.
2025-05-20 02:57:40,143 - INFO - 2736759513.py:33 - Mejor modelo pipeline guardado exitosamente en: /home/nicolas/Escritorio/workshops ETL/workshop_3/models/GradientBoosting_S1_pipeline.joblib
2025-05-20 02:57:40,148 - INFO - 2736759513.py:48 - Información del mejor modelo guardada en: /home/nicolas/Escritorio/workshops ETL/workshop_3/models/GradientBoosting_S1_info.txt
